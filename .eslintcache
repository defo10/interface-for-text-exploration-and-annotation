[{"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js":"1","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js":"2","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js":"3","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.js":"4","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.js":"5","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Projection.js":"6","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.js":"7","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js":"8","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js":"9","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Comment.js":"10","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js":"11","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js":"12","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js":"13"},{"size":451,"mtime":1607874062990,"results":"14","hashOfConfig":"15"},{"size":291,"mtime":1610637863178,"results":"16","hashOfConfig":"15"},{"size":4948,"mtime":1607874062991,"results":"17","hashOfConfig":"15"},{"size":5205,"mtime":1610637863178,"results":"18","hashOfConfig":"15"},{"size":7464,"mtime":1610555744910,"results":"19","hashOfConfig":"15"},{"size":4251,"mtime":1609935880713,"results":"20","hashOfConfig":"15"},{"size":3931,"mtime":1609935625363,"results":"21","hashOfConfig":"15"},{"size":1570,"mtime":1607874062988,"results":"22","hashOfConfig":"15"},{"size":9278,"mtime":1607874062988,"results":"23","hashOfConfig":"15"},{"size":1326,"mtime":1609859208491,"results":"24","hashOfConfig":"15"},{"size":519,"mtime":1609349848460,"results":"25","hashOfConfig":"15"},{"size":753,"mtime":1609877020615,"results":"26","hashOfConfig":"15"},{"size":979,"mtime":1610637863178,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lk4e63",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js",[],["58","59"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.js",["60"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Projection.js",["61","62","63","64"],"import React, { Component } from 'react'\nimport * as d3 from 'd3'\n\n\n\nclass Projection extends Component {\n  ref = null\n  svg = null\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  /** draws scatter plot\n   */\n  drawScatterPlot() {\n    const { width, height, setSelectedDatum, embeddings } = this.props\n\n    this.svg = d3.select(this.ref)\n    const circles = this.svg.selectAll(\"circle\")\n      .data(embeddings)\n      .join(\"circle\")\n        .attr('id', d => d[2])\n        .attr(\"transform\", d => `translate(${d[0]}, ${d[1]})`)\n        .attr(\"fill\", 'white')\n        .attr(\"r\", 3)\n\n    // this clickt event causes the react lifecycle method componentDidUpdate\n    // to be called. There, we'll update the colors. (the props in this\n    // function body aren't up to date at that point)\n    circles.on(\"click\", event => setSelectedDatum(event.target.id))\n\n    // zoom behavior\n    const zoomBehavior = this.getZoomBehavior(circles)\n    this.svg.call(zoomBehavior)\n\n    // start with scaled up view\n    this.svg.call(zoomBehavior.transform, this.getInitScale(width, height))\n  }\n\n  /** \n   * returns function which applies a transformation after each zoom\n   * event (that is, dragging around + zooming).\n   * \n   * @param selection is the selection of nodes which should be transformed\n   * @returns a zoomBehavior function, to be called on the node on which this behavior\n   * should be bound to.\n   */\n  getZoomBehavior(selection) {\n    return d3.zoom().on(\"zoom\", (event) => {\n      selection.attr(\"transform\", d => `translate(${event.transform.apply(d)})`)\n    })\n  }\n\n  /** \n   * @param {int} width the width of the surrounding svg container\n   * @param {int} height the height of the surrounding svg container\n   * @returns a zoom behavior function with a scale factor that scales\n   * the data to width and height\n   * \n   * NOTE: assumes that the scale defined in {Data.js} is [0,100]\n   */\n  getInitScale(width, height) {\n    const scaleFactor = Math.min(width / 100, height / 100)\n    return d3.zoomIdentity.scale(scaleFactor)\n  }\n\n  componentDidMount() {\n    this.drawScatterPlot()\n  }\n\n  /**\n   * accesses the svg node associated with this class and updates\n   * all points so that the clicked point and the points belonging\n   * to its cluster have distinct colors\n   */\n  updateColorPoints() {\n    if (!this.svg) return\n    const { selected_datum, labels, labelChoice, embeddings} = this.props\n\n    this.svg.selectAll('circle')\n      .data(embeddings)\n      .attr('fill', d => {\n        const i = d[2] // == id == index of datum in data d\n        if (i == selected_datum) return 'cyan'\n        if (labels[i]?.[labelChoice] === labels[selected_datum]?.[labelChoice]) return 'green'\n        return 'white'\n      })\n  }\n\n  highlightSearchResults() {\n    if (!this.svg) return\n    const { selected_datum, labels, labelChoice, embeddings, searchResultIndices } = this.props\n\n    this.svg.selectAll('circle')\n      .data(embeddings)\n      .attr('fill', d => {\n        const i = d[2] // == id == index of datum in data d\n        if (searchResultIndices[i]) return 'green'\n        return 'white'\n      })\n  }\n\n  hasSelectedDatumChanged(prevProps) {\n    return prevProps.selected_datum !== this.props.selected_datum\n  }\n\n  haveEmbeddingsChanged(prevProps) {\n    return prevProps.embeddings !== this.props.embeddings || prevProps.embeddings.length !== this.props.embeddings.length\n  }\n\n  hasLabelChoiceChanged(prevProps) {\n    return prevProps.labelChoice !== this.props.labelChoice\n  }\n\n  haveSearchResultsChanged(prevProps) {\n    return prevProps.searchResultIndices !== this.props.searchResultIndices\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.hasSelectedDatumChanged(prevProps)) return this.updateColorPoints()\n    if (this.haveEmbeddingsChanged(prevProps)) {\n      this.drawScatterPlot()\n      this.updateColorPoints()\n      return\n    }\n    if (this.hasLabelChoiceChanged(prevProps)) return this.updateColorPoints()\n    if (this.haveSearchResultsChanged) return this.highlightSearchResults()\n  }\n\n  render() {\n    const { width, height } = this.props\n    return (\n          <svg ref={(ref) => this.ref = ref} width={width} height={height} overflow=\"hidden\"></svg>\n    )\n  }\n}\n\nexport default Projection\n","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.js",["65","66","67","68"],"import React, { Component } from 'react'\nimport Comment from './SidebarElements/Comment'\nimport Separator from './SidebarElements/Separator'\nimport Select from './SidebarElements/Select'\n\n// if you want to change order, also change selectEmbedding in Layout.js\nconst dimReductionChoice = [\"Don't use clustering results\", 'Use clustering results']\n\nconst labelsNames = ['KMedoids', 'K-Means']\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimReductionIndex: 0,\n      labelChoiceIndex: 0,\n    }\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this)\n    this.handleLabelChoice = this.handleLabelChoice.bind(this)\n  }\n\n  selectCommentsOfCluster() {\n    let { selected_datum, data, labels } = this.props\n    let labelChoice = this.props.labelChoice\n    if (selected_datum === null || data === null || labels === null) return []\n    return data.filter((elem, index) => {\n      if (labels[index]?.[labelChoice] === labels[selected_datum]?.[labelChoice]) return true\n      return false\n    })\n  }\n\n  createComments(data) {\n    let { sidebar_orientation } = this.props\n    return data.map((element, i) => {\n      if (i > 20) return\n      return (\n        <Comment elem={element} sidebar_orientation={sidebar_orientation} key={`cluster-peer-${i}`} dense />\n      )\n    })\n  }\n\n  componentDidMount() {\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this)\n  }\n\n  handleSelectAlgorithm(event) {\n    let i = parseInt(event.target.value) || 0\n    this.props.setEmbeddingIndex(i)\n  }\n\n  handleLabelChoice(event) {\n    let i = event.target.value // index of list\n    this.setState({\n      labelChoiceIndex: i,\n    })\n    let label_attribute = Object.getOwnPropertyNames(this.props.labels[0])[i]\n    this.props.selectLabel(label_attribute)\n  }\n\n  render() {\n    let {\n      sidebar_orientation,\n      grem,\n      algorithm_choice,\n      selected_datum,\n      data,\n      labels\n    } = this.props\n\n    const isOnMobile = sidebar_orientation === 'horizontal'\n    const style_container = {\n      width: '100%',\n      height: '100%'\n    }\n    const style_content = { // comment + associated comments\n      display: isOnMobile ? 'inline' : 'block',\n      overflow: 'scroll',\n      height: isOnMobile ? '100vw' : '100vh',\n      width: '100%'\n    }\n\n    if (selected_datum) {\n      var cluster = this.selectCommentsOfCluster()\n      var comments_of_cluster = this.createComments(cluster)\n    }\n\n    return (\n      <div style={style_container}>\n        <div>\n          <div style={style_content}>\n            <Select\n              title={'Dimensionality Reduction Positioning    '}\n              onChange={this.handleSelectAlgorithm}\n              value={this.props.embeddingChoiceIndex}\n              list_of_options={dimReductionChoice}\n            />\n            <Select\n              title={'Clustering    '}\n              onChange={this.handleLabelChoice}\n              value={this.state.labelChoice}\n              list_of_options={labelsNames}\n            />\n\n            <Separator sidebar_orientation={sidebar_orientation} />\n            {!selected_datum ? \"Click on a point to see its content here\"\n              : <div\n                style={{\n                  display: 'flex',\n                  flexDirection:\n                    sidebar_orientation === 'horizontal' ? 'row' : 'column',\n                }}\n              >\n                <p style={{display: 'inline', padding: '8px 16px'}}>{`${cluster.length} of ${data.length} comments in this cluster`}</p>\n                <Separator sidebar_orientation={sidebar_orientation} />\n                <Comment elem={data[selected_datum]} sidebar_orientation={sidebar_orientation} />\n                <Separator sidebar_orientation={sidebar_orientation} />\n                {comments_of_cluster}\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js",["69"],"import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Comment.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":60,"column":15,"nodeType":"77","messageId":"78","endLine":60,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":86,"column":15,"nodeType":"77","messageId":"78","endLine":86,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":94,"column":13,"nodeType":"81","messageId":"82","endLine":94,"endColumn":27},{"ruleId":"79","severity":1,"message":"83","line":94,"column":29,"nodeType":"81","messageId":"82","endLine":94,"endColumn":35},{"ruleId":"79","severity":1,"message":"84","line":94,"column":37,"nodeType":"81","messageId":"82","endLine":94,"endColumn":48},{"ruleId":"85","severity":1,"message":"86","line":35,"column":19,"nodeType":"87","messageId":"88","endLine":35,"endColumn":25},{"ruleId":"79","severity":1,"message":"89","line":63,"column":7,"nodeType":"81","messageId":"82","endLine":63,"endColumn":11},{"ruleId":"79","severity":1,"message":"90","line":64,"column":7,"nodeType":"81","messageId":"82","endLine":64,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":67,"column":7,"nodeType":"81","messageId":"82","endLine":67,"endColumn":13},{"ruleId":"79","severity":1,"message":"91","line":7,"column":17,"nodeType":"81","messageId":"82","endLine":7,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"92","line":19,"column":13},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'selected_datum' is assigned a value but never used.","Identifier","unusedVar","'labels' is assigned a value but never used.","'labelChoice' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'grem' is assigned a value but never used.","'algorithm_choice' is assigned a value but never used.","'p' is assigned a value but never used.","Parsing error: Invalid left-hand side in assignment expression\n\n\u001b[0m \u001b[90m 17 | \u001b[39m        }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m        setLabelOfId\u001b[33m:\u001b[39m (state\u001b[33m,\u001b[39m action) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m            state\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlabels[action\u001b[33m.\u001b[39mpayload\u001b[33m.\u001b[39mid] \u001b[33m=\u001b[39m action\u001b[33m.\u001b[39mpayload\u001b[33m.\u001b[39mlabel\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m        }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m        setState\u001b[33m:\u001b[39m (state\u001b[33m,\u001b[39m action) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m            state \u001b[33m=\u001b[39m action\u001b[33m.\u001b[39mpayload\u001b[33m.\u001b[39mstate\u001b[0m","no-global-assign","no-unsafe-negation"]