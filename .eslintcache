[{"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js":"1","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js":"2","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js":"3","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js":"4","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js":"5","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js":"6","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js":"7","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js":"8","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js":"9","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js":"10","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx":"11","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx":"12","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx":"13","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx":"14","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx":"15","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx":"16","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx":"17","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx":"18","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx":"19","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx":"20","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx":"21","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx":"22","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx":"23","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx":"24","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx":"25","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar2.tsx":"26","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ListItemComment.tsx":"27"},{"size":451,"mtime":1607874062990,"results":"28","hashOfConfig":"29"},{"size":1061,"mtime":1615936830110,"results":"30","hashOfConfig":"29"},{"size":4948,"mtime":1607874062991,"results":"31","hashOfConfig":"29"},{"size":1570,"mtime":1607874062988,"results":"32","hashOfConfig":"29"},{"size":9278,"mtime":1607874062988,"results":"33","hashOfConfig":"29"},{"size":519,"mtime":1609349848460,"results":"34","hashOfConfig":"29"},{"size":753,"mtime":1609877020615,"results":"35","hashOfConfig":"29"},{"size":978,"mtime":1610638122448,"results":"36","hashOfConfig":"29"},{"size":1563,"mtime":1610662485820,"results":"37","hashOfConfig":"29"},{"size":185,"mtime":1611271763856,"results":"38","hashOfConfig":"29"},{"size":7236,"mtime":1616443075224,"results":"39","hashOfConfig":"29"},{"size":19549,"mtime":1616366773509,"results":"40","hashOfConfig":"29"},{"size":7128,"mtime":1616366727426,"results":"41","hashOfConfig":"29"},{"size":906,"mtime":1616366879904,"results":"42","hashOfConfig":"29"},{"size":4622,"mtime":1616443145635,"results":"43","hashOfConfig":"29"},{"size":12703,"mtime":1616335987919,"results":"44","hashOfConfig":"29"},{"size":1551,"mtime":1616367180698,"results":"45","hashOfConfig":"29"},{"size":1277,"mtime":1612014720566,"results":"46","hashOfConfig":"29"},{"size":904,"mtime":1611278770069,"results":"47","hashOfConfig":"29"},{"size":3716,"mtime":1613586619846,"results":"48","hashOfConfig":"29"},{"size":10837,"mtime":1616366919498,"results":"49","hashOfConfig":"29"},{"size":2989,"mtime":1616256661649,"results":"50","hashOfConfig":"29"},{"size":3203,"mtime":1614081518789,"results":"51","hashOfConfig":"29"},{"size":4531,"mtime":1613582925837,"results":"52","hashOfConfig":"29"},{"size":3872,"mtime":1614009016789,"results":"53","hashOfConfig":"29"},{"size":1229,"mtime":1616367118027,"results":"54","hashOfConfig":"29"},{"size":3269,"mtime":1616438626101,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"mxeu8k",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js",[],["124","125"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js",["126"],"import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n",["127","128"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js",[],["129","130"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js",["131"],"import React from 'react';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n            transition: 'all .2s ease-in-out',\n            '&:hover': {\n                boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n                marginBottom: '54px'\n            }\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n        p: {\n            display: 'inline-block',\n            marginBlockStart: '1em',\n            marginBlockEnd: '1em',\n            marginInlineStart: '0px',\n            marginInlineEnd: '1em',\n        },\n    })\n\n/**\n * \n * @param comments is the subset of the data which has label @param label\n * @param label is the label of said comments\n */\nexport default function ClusterSnippet({ label, labels, data, ...otherProps }) {\n    const classes = useStyles()\n\n    const correctLabels = labels.filter(({ label_kmedoids, label_kmeans }) => label_kmedoids === label)\n    const size = correctLabels.length\n\n    const onClick = (e) => null\n\n    return (\n\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            <h3>{label}</h3>\n            <p className={classes.p}>Size: {size}</p>\n            <p className={classes.p}>Density: 41</p>\n        </div>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx",["153","154","155","156","157","158","159","160","161","162"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx",["163","164"],"import * as _ from 'lodash'\nimport React, { Component } from 'react'\nimport SplitPane from 'react-split-pane'\nimport { PropsFromData } from './Data'\nimport Projection, { PropsForProjection } from './ProjectionElements/Projection'\nimport ProjectionParameters from './ProjectionElements/ProjectionParameters'\nimport Sidebar, { PropsForSidebar } from './Sidebar'\nimport Sidebar2 from './Sidebar2'\n\nconst minSizePanel = 350\n\n\nexport type LayoutState = {\n  ww: number | null,\n  wh: number | null,\n  sidebar_height: number | null,\n  /** is the index of the comment clicked on by the user in the projection, or null if nothing selected */\n  selected_datum: number | null,\n  searchInput: string,\n  // for faster lookup, as object of form {'id':position, ...} with position being rank in results\n  searchResultIndices: object,\n  /** is the cluster of which user wants a detail view */\n  selectedCluster: string | null,\n  sidebar_width: number | null,\n  /** the width in px of the svg element */\n  svg_width: number | null,\n  /** at every drag of the user, we need to redraw the svg element. This is done with the key prop */\n  svgKey: string\n}\n\nclass Layout extends Component<PropsFromData, LayoutState> {\n  sidebar_ctx: any | null\n  sidebar_mount: HTMLDivElement | null = null\n\n  constructor(props: PropsFromData) {\n    super(props)\n    this.state = {\n      ww: null,\n      wh: null,\n      sidebar_height: null,\n      sidebar_width: null,\n      svg_width: null,\n      selected_datum: null,\n      searchInput: \"\",\n      searchResultIndices: {},\n      selectedCluster: null,\n      svgKey: \"1\",\n    }\n    this.sidebar_ctx = null\n    this.setSize = _.debounce(this.setSize.bind(this), 200)\n    this.setSelectedDatum = this.setSelectedDatum.bind(this)\n    this.updateSearchResultIndices = this.updateSearchResultIndices.bind(this)\n    this.selectCluster = this.selectCluster.bind(this)\n  }\n\n  selectCluster(newLabel: string) {\n    this.setState({\n      selectedCluster: newLabel\n    })\n    this.props.setChangedClusterName({\n      original: newLabel,\n      changed: newLabel\n    })\n  }\n\n  setSize() {\n    let sidebar_height = this.sidebar_mount?.offsetHeight || 0\n    let sidebar_width = _.max([window.innerWidth / 4 || 350, 350]) || 350\n    let svg_width = _.min([window.innerWidth - (2 * minSizePanel), 0.5 * window.innerWidth]) || window.innerWidth - (2 * minSizePanel)\n    this.setState({\n      sidebar_height: sidebar_height,\n      sidebar_width: sidebar_width,\n      svg_width: svg_width,\n      ww: window.innerWidth,\n      wh: window.innerHeight,\n    })\n  }\n\n  componentWillMount() {\n    this.setSize()\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setSize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize)\n  }\n\n  haveEmbeddingsChanged(prevProps: PropsFromData) {\n    return prevProps.embeddings !== this.props.embeddings || prevProps.embeddings.length !== this.props.embeddings.length\n  }\n\n  /**\n   * sets the selected datum which causes it to show in the sidebar \n   * @param {int} i is the index of the selected datum\n   */\n  setSelectedDatum(i: number | null) {\n    if (!this.props.labels) return\n    this.setState({\n      selected_datum: i,\n      selectedCluster: (i) ? this.props.labels[i].label_kmedoids : null\n    })\n  }\n\n\n  updateSearchResultIndices(searchTerm: string) {\n    if (searchTerm.length < 1) return\n    let searchResults = this.props.searchIndex?.search(searchTerm)\n    let searchResultsCleaned: any = searchResults?.map((result: lunr.Index.Result, i) => [result.ref, i])\n    this.setState({\n      searchInput: searchTerm,\n      searchResultIndices: Object.fromEntries(searchResultsCleaned),\n      selected_datum: null, // empty sidebar\n    })\n  }\n\n  render() {\n    let sidebar_ctx = this.sidebar_ctx\n    let line_height = 1.5\n    let sidebar_style: any = {\n      height: this.state.wh,\n      overflow: 'auto', background: '#222',\n      display: 'flex', flexDirection: 'column',\n    }\n    let main_style: any = {\n      position: 'inline-block', height: this.state.wh,\n      background: '#111', overflow: 'hidden',\n    }\n\n    let sidebar_orientation\n    let font_size = 16\n    sidebar_orientation = 'vertical'\n\n    const propsForSidebar: PropsForSidebar = {\n      ...this.props,\n      ...this.state,\n      setSelectedDatum: this.setSelectedDatum,\n      selectCluster: this.selectCluster,\n      sidebar_orientation: sidebar_orientation,\n    }\n\n    // show all coordinates to show in array of array which is more performant\n    const allCoordinatesAsArrayFilt = this.props.allCoordinates!\n      .filter(d => this.props.clustersToShow.includes(this.props.labels?.[d.index].label_kmedoids || \"\")) // only comments of clusters set visible\n      .map(d => [d.x, d.y, d.index])\n\n    const propsForProjection: PropsForProjection = {\n      ...this.props,\n      width: this.state.svg_width || 0,\n      height: main_style.height,\n      sidebar_ctx: sidebar_ctx,\n      selectedCluster: this.state.selectedCluster,\n      setSelectedDatum: this.setSelectedDatum,\n      selected_datum: this.state.selected_datum,\n      searchResultIndices: this.state.searchResultIndices,\n      selectCluster: this.selectCluster,\n      allCoordinatesAsArray: allCoordinatesAsArrayFilt\n    }\n\n    /* code for search bar, add above splitpane\n    <div style={general_style}>\n        <div style={{ position: 'absolute', zIndex: 10, left: '50%', marginLeft: '-10vw', right: '50%', top: '4vh', width: '30vw' }}>\n          <SearchBar\n            value={this.state.searchInput}\n            onChange={this.updateSearchResultIndices}\n          />\n        </div>\n        splitpane\n    </div>\n    */\n\n    return this.state.ww! !== null ? (\n      <SplitPane\n        split=\"vertical\"\n        minSize={minSizePanel}\n        maxSize={700}\n        defaultSize={this.state.sidebar_width || minSizePanel}\n        onChange={(newWidth) => {\n          this.setState({\n            sidebar_width: newWidth + 8,\n            svgKey: `${parseInt(this.state.svgKey) + 1}` // forces redrawing of component\n          })\n        }\n        }\n      >\n        <div\n          style={sidebar_style}\n          ref={sidebar_mount => {\n            this.sidebar_mount = sidebar_mount\n          }}\n        >\n          <Sidebar {...propsForSidebar} />\n        </div>\n        <SplitPane\n          split=\"vertical\"\n          minSize={400}\n          defaultSize={this.state.svg_width || 400}\n          maxSize={this.state.ww - (2 * minSizePanel)}\n          onChange={(newWidth) => {\n            this.setState({\n              svg_width: newWidth,\n              svgKey: `${parseInt(this.state.svgKey) + 1}` // forces redrawing of component\n            })\n          }\n          }\n        >\n          <div style={main_style}>\n            <ProjectionParameters {...propsForProjection} />\n            <Projection key={this.state.svgKey} {...propsForProjection} />\n          </div>\n          <div style={sidebar_style}>\n            <Sidebar2 {...propsForSidebar} />\n          </div>\n        </SplitPane>\n      </SplitPane>\n    ) : (\n        <div style={{ padding: '1rem' }}>Loading layout...</div>\n      )\n  }\n}\n\nexport default Layout\n",["165","166"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx",["167","168","169","170"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx",["171","172","173"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx",["174","175","176","177","178","179"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx",["180","181","182","183"],"import { PropsForSidebar } from '../../Sidebar'\nimport { Cluster, ClusterInfo, DataPoint } from '../../Data'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport NeoMorphCard from './NeoMorphCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent } from '@material-ui/core'\n\n\ntype PropsMetaInfos = {\n    selectedClusterInfo: ClusterInfo\n} & PropsForSidebar\n\nconst useStyles = makeStyles((theme) => ({\n    styleContainer: {\n        display: 'block',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    }\n}))\n\nexport default function MetaInfo(props: PropsMetaInfos) {\n    const classes = useStyles()\n    const { selectedClusterInfo } = props\n\n    const prct = ((selectedClusterInfo?.size || 0) * 100 / (props.data?.length || 1)).toFixed(2)\n    return (\n        <Card className={classes.styleContainer}>\n            <CardContent>\n                <p><b>Size:</b> {selectedClusterInfo?.size || 0} of {props.data?.length} comments in total</p>\n                <p><b>Size (in %):</b> {prct} %</p>\n                <p><b>Density</b> (lower is better): {selectedClusterInfo?.quality?.toFixed(3) || 0}</p>\n            </CardContent>\n        </Card>\n    )\n}",["184","185"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx",["186","187","188"],"import { PropsForSidebar } from '../../Sidebar'\nimport { createUseStyles } from 'react-jss'\nimport { DataPoint } from '../../Data'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n    })\n\ntype NeoMorphProps = {\n    children: React.ReactNode\n}\n\nexport default function NeoMorphCard(props: NeoMorphProps) {\n    const classes = useStyles()\n\n    return (\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            {props.children}\n        </div>\n    )\n}",["189","190"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx",["191","192","193","194","195","196"],"import React, { useEffect, useState } from \"react\";\nimport { Button, makeStyles, TextField, Toolbar, Tooltip, Typography } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { PropsForSidebar } from \"../Sidebar\";\n\nconst useStyles = makeStyles((theme) => ({\n    horizontalContainer: {\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        paddingTop: '1em',\n        paddingBottom: '1em',\n        width: 'auto',\n        height: 'auto'\n    },\n    rightAlign: {\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: '0'\n    },\n    gridContainer: {\n        display: 'grid',\n        gridTemplateColumns: '9fr 1fr',\n        gridRowGap: theme.spacing(1)\n    }\n}));\n\nexport default function ClusterMerger(props: PropsForSidebar) {\n    const classes = useStyles()\n    const [newClusterName, setName] = useState('New Cluster Name')\n    const [firstLabel, setFirstLabel] = useState<string | null>(null)\n    const [secondLabel, setSecondLabel] = useState<string | null>(null)\n\n    const allClusters = Array.from(new Set(props.labels?.map(label => label.label_kmedoids)))\n\n    const merge = () => {\n        if (!firstLabel || !secondLabel) return\n        props.renameLabels([firstLabel, secondLabel], newClusterName)\n        props.setSelectedDatum(null)\n        props.selectCluster(newClusterName)\n        if (!props.clustersToShow.includes(newClusterName)) {\n            props.setClustersToShow([...props.clustersToShow, newClusterName])\n        }\n        setFirstLabel(null)\n        setSecondLabel(null)\n    }\n\n    const groupByVisibleClusters = (option: string) =>\n        (props.clustersToShow?.includes(option))\n            ? \"Visible Clusters\"\n            : \"Other Clusters\"\n\n    /** comparator to sort array by its visibility in the projection */\n    const compareByVisibility = (a: string, b: string) => {\n        const aGroup = groupByVisibleClusters(a)\n        const bGroup = groupByVisibleClusters(b)\n        if (aGroup < bGroup) return 1\n        else if (aGroup === bGroup) return 0\n        else return -1 //(aGroup > bGroup)\n    }\n\n    return (\n        <>\n            <div className={classes.gridContainer}>\n                <Autocomplete\n                    options={allClusters.filter(cluster => cluster != secondLabel).sort(compareByVisibility)}\n                    groupBy={groupByVisibleClusters}\n                    renderInput={(params: any) => <TextField {...params} label=\"First\" variant=\"outlined\" />}\n                    onChange={(e, value) => setFirstLabel(value!)}\n                    value={firstLabel}\n                />\n                <p style={{ textAlign: 'center' }}>+</p>\n                <Autocomplete\n                    options={allClusters.filter(cluster => cluster != firstLabel).sort(compareByVisibility)}\n                    groupBy={groupByVisibleClusters}\n                    renderInput={(params: any) => <TextField {...params} label=\"Second\" variant=\"outlined\" />}\n                    onChange={(e, value) => setSecondLabel(value!)}\n                    value={secondLabel}\n                />\n                <p style={{ textAlign: 'center' }}>=</p>\n                <TextField\n                    variant='outlined'\n                    value={newClusterName}\n                    onChange={(e) => setName(e.target.value)}\n                />\n            </div>\n            <div className={classes.horizontalContainer}>\n                <Button\n                    className={classes.rightAlign}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={merge}\n                    disabled={!(firstLabel && secondLabel)}\n                >Merge</Button>\n            </div>\n        </>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx",["211","212","213"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx",["214"],"import { Button, Card, CardActions, CardContent, makeStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport _ from 'lodash'\nimport React, { useState } from 'react'\nimport { DataPoint } from '../../Data'\nimport { PropsForSidebar } from '../../Sidebar'\nimport ClusterChangeCommentDialog from './ClusterChangeCommentDialog'\n\n\n/**\n * used inside sidebar to display one comment\n * elem is one data point\n */\n\nexport type CommentProps = {\n    dense?: boolean,\n    /** i the the index of the comment in prop data */\n    i: number,\n    /** callback of cluster change for this comment, or null if not changed */\n    onMoveCluster: (newLabel: string | null, i: number) => void,\n    /** is the comment the one of the representative */\n    isRepresentative?: boolean\n} & PropsForSidebar\n\nconst useStyles = makeStyles<any, { backgroundColor: string }>((theme) => ({\n    styleContainer: props => ({\n        display: 'block',\n        marginLeft: 0,\n        marginRight: 0,\n        marginBottom: theme.spacing(1),\n        backgroundColor: props.backgroundColor,\n        borderRadius: 0,\n    }),\n    styleMetaInfos: {\n        display: 'block',\n        width: '100%',\n        height: 'auto',\n    },\n    styleUsername: {\n        display: 'inline',\n        fontWeight: 'bold'\n    },\n    styleComment: {\n        marginBottom: '0',\n        marginTop: '8px'\n    },\n    styleDate: {\n        marginLeft: '8px',\n        display: 'inline',\n        color: 'LightGray',\n        fontStyle: 'italic',\n        fontSize: '0.9em'\n    },\n    btnsContainer: {\n        maxHeight: 0,\n        overflow: 'hidden',\n        transitionDelay: '0.2s',\n        transition: 'max-height 0.3s',\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        width: '100%',\n    },\n    rightAlign: {\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: '0'\n    },\n}))\n\n// styles for card content --> make denser\nconst useCardContentStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 8,\n        paddingBottom: 0,\n        paddingLeft: 16,\n        paddingRight: 16,\n    }\n}))\n\nexport default function Comment({ dense = false, data, i, onMoveCluster, added = false, removed = false, isRepresentative = false, ...other }: CommentProps) {\n    const backgroundColor: string = added ? '#1d3d17' : removed ? '#3d171b' : \"auto\"\n    const classes = useStyles({ backgroundColor: backgroundColor })\n    const cardContentStyles = useCardContentStyles()\n    const { publishedAt, authorName, cleaned } = data![i]\n    const [showClusterChangeDialog, setShowClusterChangeDialog] = useState(false)\n\n    const showPoint = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        other.setHoveredCommentCoordinate(i)\n    }\n\n    const hidePoint = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        other.setHoveredCommentCoordinate(null)\n    }\n\n    const dataPoint = _.find(other.dataChanged, ['i', i])\n\n    return (\n        <Card onMouseEnter={showPoint} onMouseLeave={hidePoint} className={classes.styleContainer}>\n            <CardContent classes={cardContentStyles}>\n                {dataPoint && <p style={{ marginLeft: 0 }} className={classes.styleDate}>{`from cluster ${dataPoint?.oldLabel.label_kmedoids} to ${dataPoint?.newLabel.label_kmedoids}`}</p>}\n                <div className={classes.styleMetaInfos}>\n                    <p className={classes.styleUsername}>{authorName}</p>\n                    <p className={classes.styleDate}>{publishedAt}</p>\n                </div>\n                <p className={classes.styleComment}>{cleaned}</p>\n            </CardContent>\n            <CardActions>\n                {isRepresentative\n                    ? (<Tooltip title=\"As this comment represents the whole cluster, it may not be moved. Use the Merge Clusters Field to merge the whole cluster with another.\">\n                        <span><Button onClick={() => null} disabled>Move to other Cluster</Button></span>\n                    </Tooltip>)\n                    : <Button onClick={() => setShowClusterChangeDialog(true)}>Move to other Cluster</Button>\n                }\n            </CardActions>\n            <ClusterChangeCommentDialog\n                open={showClusterChangeDialog}\n                onMoveCluster={(clusterSelected) => {\n                    setShowClusterChangeDialog(false)\n                    onMoveCluster(clusterSelected, i)\n                }}\n                i={i}\n                data={data}\n                {...other}\n            />\n        </Card>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx",["215","216","217","218","219","220","221","222"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Data, { Label } from '../../Data';\nimport { CommentProps } from './Comment';\nimport _ from 'lodash';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\n\ntype ClusterChangeCommentDialogProps = {\n    open: boolean,\n} & CommentProps\n\n\nexport default function ClusterChangeCommentDialog({\n    open,\n    data,\n    labels,\n    clustersToShow,\n    clusters,\n    onClose,\n    i,\n    selectedCluster,\n    onMoveCluster,\n    ...other\n}: ClusterChangeCommentDialogProps) {\n    const classes = useStyles();\n\n    const remainingClusters = _.without(Object.keys(clusters), ...clustersToShow)\n\n    return (\n        <Dialog onClose={() => onMoveCluster(null, i)} aria-labelledby=\"dialog for changing the cluster of the selected comment\" open={open}>\n            <DialogTitle>Change Cluster</DialogTitle>\n            <List>\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Selected Cluster</ListSubheader>\n                <ListItem onClick={() => onMoveCluster(selectedCluster, i)} button key={`clusterpicker-${-1}`}>\n                    <ListItemText primary={selectedCluster} secondary={`size: ${clusters[selectedCluster || \"\"]?.size}    density: ${clusters[selectedCluster || \"\"]?.quality.toFixed(3)}`} />\n                </ListItem>\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Visible Clusters</ListSubheader>\n                {\n                    clustersToShow.map((cluster: string) => {\n                        if (cluster === labels![i].label_kmedoids) return\n                        return (\n                            <ListItem onClick={() => onMoveCluster(cluster, i)} button key={`clusterpicker-${cluster}`}>\n                                <ListItemText primary={cluster} secondary={`size: ${clusters[cluster]?.size || 'N/A'}    density: ${clusters[cluster]?.quality.toFixed(3) || 'N/A'}`} />\n                            </ListItem>)\n                    })\n                }\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Other Clusters</ListSubheader>\n                {\n                    remainingClusters.map((cluster: string) => (\n                        <ListItem onClick={() => onMoveCluster(cluster, i)} button key={`clusterpicker-${cluster}`}>\n                            <ListItemText primary={cluster} secondary={`size: ${clusters[cluster].size}    density: ${clusters[cluster].quality.toFixed(3)}`} />\n                        </ListItem>)\n                    )\n                }\n                <ListItem onClick={() => onMoveCluster('new', i)} autoFocus button>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Add to new Cluster\" secondary={'The name of the new cluster is \"new\" by default'}/>\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar2.tsx",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ListItemComment.tsx",["223","224","225","226","227"],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":7,"column":17,"nodeType":"234","messageId":"235","endLine":7,"endColumn":18},{"ruleId":"228","replacedBy":"236"},{"ruleId":"230","replacedBy":"237"},{"ruleId":"228","replacedBy":"238"},{"ruleId":"230","replacedBy":"239"},{"ruleId":"232","severity":1,"message":"240","line":42,"column":11,"nodeType":"234","messageId":"235","endLine":42,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":2,"column":41,"nodeType":"234","messageId":"235","endLine":2,"endColumn":46},{"ruleId":"241","severity":1,"message":"243","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":17},{"ruleId":"241","severity":1,"message":"244","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":16},{"ruleId":"241","severity":1,"message":"245","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":20},{"ruleId":"241","severity":1,"message":"246","line":9,"column":10,"nodeType":"234","messageId":"235","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"247","line":9,"column":15,"nodeType":"234","messageId":"235","endLine":9,"endColumn":19},{"ruleId":"241","severity":1,"message":"248","line":9,"column":21,"nodeType":"234","messageId":"235","endLine":9,"endColumn":32},{"ruleId":"241","severity":1,"message":"249","line":9,"column":34,"nodeType":"234","messageId":"235","endLine":9,"endColumn":42},{"ruleId":"241","severity":1,"message":"250","line":9,"column":44,"nodeType":"234","messageId":"235","endLine":9,"endColumn":67},{"ruleId":"241","severity":1,"message":"251","line":10,"column":8,"nodeType":"234","messageId":"235","endLine":10,"endColumn":34},{"ruleId":"241","severity":1,"message":"252","line":12,"column":10,"nodeType":"234","messageId":"235","endLine":12,"endColumn":15},{"ruleId":"241","severity":1,"message":"253","line":14,"column":8,"nodeType":"234","messageId":"235","endLine":14,"endColumn":20},{"ruleId":"241","severity":1,"message":"254","line":15,"column":8,"nodeType":"234","messageId":"235","endLine":15,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":60,"column":55,"nodeType":"257","messageId":"258","endLine":60,"endColumn":57},{"ruleId":"255","severity":1,"message":"259","line":70,"column":75,"nodeType":"257","messageId":"258","endLine":70,"endColumn":77},{"ruleId":"260","severity":1,"message":"261","line":76,"column":8,"nodeType":"262","endLine":76,"endColumn":25,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":98,"column":29,"nodeType":"266","messageId":"267","endLine":98,"endColumn":35},{"ruleId":"255","severity":1,"message":"259","line":124,"column":48,"nodeType":"257","messageId":"258","endLine":124,"endColumn":50},{"ruleId":"255","severity":1,"message":"259","line":125,"column":48,"nodeType":"257","messageId":"258","endLine":125,"endColumn":50},{"ruleId":"255","severity":1,"message":"259","line":126,"column":52,"nodeType":"257","messageId":"258","endLine":126,"endColumn":54},{"ruleId":"255","severity":1,"message":"259","line":127,"column":52,"nodeType":"257","messageId":"258","endLine":127,"endColumn":54},{"ruleId":"241","severity":1,"message":"268","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":200,"column":23,"nodeType":"271","messageId":"272","endLine":200,"endColumn":25},{"ruleId":"255","severity":1,"message":"256","line":200,"column":66,"nodeType":"257","messageId":"258","endLine":200,"endColumn":68},{"ruleId":"269","severity":1,"message":"270","line":201,"column":7,"nodeType":"271","messageId":"272","endLine":201,"endColumn":9},{"ruleId":"269","severity":1,"message":"273","line":201,"column":7,"nodeType":"271","messageId":"272","endLine":201,"endColumn":9},{"ruleId":"269","severity":1,"message":"273","line":201,"column":27,"nodeType":"271","messageId":"272","endLine":201,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":201,"column":62,"nodeType":"257","messageId":"258","endLine":201,"endColumn":64},{"ruleId":"255","severity":1,"message":"256","line":244,"column":20,"nodeType":"257","messageId":"258","endLine":244,"endColumn":22},{"ruleId":"255","severity":1,"message":"259","line":518,"column":63,"nodeType":"257","messageId":"258","endLine":518,"endColumn":65},{"ruleId":"264","severity":1,"message":"265","line":518,"column":73,"nodeType":"266","messageId":"267","endLine":518,"endColumn":79},{"ruleId":"241","severity":1,"message":"274","line":117,"column":9,"nodeType":"234","messageId":"235","endLine":117,"endColumn":20},{"ruleId":"241","severity":1,"message":"275","line":129,"column":9,"nodeType":"234","messageId":"235","endLine":129,"endColumn":18},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"241","severity":1,"message":"276","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":31},{"ruleId":"241","severity":1,"message":"277","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":22},{"ruleId":"241","severity":1,"message":"278","line":6,"column":10,"nodeType":"234","messageId":"235","endLine":6,"endColumn":19},{"ruleId":"241","severity":1,"message":"279","line":63,"column":11,"nodeType":"234","messageId":"235","endLine":63,"endColumn":17},{"ruleId":"241","severity":1,"message":"280","line":27,"column":6,"nodeType":"234","messageId":"235","endLine":27,"endColumn":21},{"ruleId":"241","severity":1,"message":"281","line":34,"column":5,"nodeType":"234","messageId":"235","endLine":34,"endColumn":18},{"ruleId":"241","severity":1,"message":"282","line":258,"column":11,"nodeType":"234","messageId":"235","endLine":258,"endColumn":20},{"ruleId":"241","severity":1,"message":"283","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":18},{"ruleId":"241","severity":1,"message":"284","line":4,"column":10,"nodeType":"234","messageId":"235","endLine":4,"endColumn":14},{"ruleId":"241","severity":1,"message":"285","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":22},{"ruleId":"241","severity":1,"message":"286","line":5,"column":54,"nodeType":"234","messageId":"235","endLine":5,"endColumn":61},{"ruleId":"241","severity":1,"message":"287","line":7,"column":17,"nodeType":"234","messageId":"235","endLine":7,"endColumn":26},{"ruleId":"241","severity":1,"message":"288","line":7,"column":28,"nodeType":"234","messageId":"235","endLine":7,"endColumn":36},{"ruleId":"241","severity":1,"message":"289","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"278","line":2,"column":32,"nodeType":"234","messageId":"235","endLine":2,"endColumn":41},{"ruleId":"241","severity":1,"message":"290","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":17},{"ruleId":"241","severity":1,"message":"245","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":20},{"ruleId":"228","replacedBy":"291"},{"ruleId":"230","replacedBy":"292"},{"ruleId":"241","severity":1,"message":"293","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"278","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":19},{"ruleId":"241","severity":1,"message":"290","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"228","replacedBy":"294"},{"ruleId":"230","replacedBy":"295"},{"ruleId":"241","severity":1,"message":"287","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"241","severity":1,"message":"296","line":2,"column":41,"nodeType":"234","messageId":"235","endLine":2,"endColumn":48},{"ruleId":"241","severity":1,"message":"286","line":2,"column":50,"nodeType":"234","messageId":"235","endLine":2,"endColumn":57},{"ruleId":"241","severity":1,"message":"297","line":2,"column":59,"nodeType":"234","messageId":"235","endLine":2,"endColumn":69},{"ruleId":"255","severity":1,"message":"259","line":65,"column":68,"nodeType":"257","messageId":"258","endLine":65,"endColumn":70},{"ruleId":"255","severity":1,"message":"259","line":73,"column":68,"nodeType":"257","messageId":"258","endLine":73,"endColumn":70},{"ruleId":"241","severity":1,"message":"298","line":5,"column":13,"nodeType":"234","messageId":"235","endLine":5,"endColumn":17},{"ruleId":"241","severity":1,"message":"299","line":5,"column":19,"nodeType":"234","messageId":"235","endLine":5,"endColumn":28},{"ruleId":"241","severity":1,"message":"300","line":50,"column":7,"nodeType":"234","messageId":"235","endLine":50,"endColumn":21},{"ruleId":"241","severity":1,"message":"300","line":147,"column":60,"nodeType":"234","messageId":"235","endLine":147,"endColumn":74},{"ruleId":"255","severity":1,"message":"256","line":157,"column":19,"nodeType":"257","messageId":"258","endLine":157,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":158,"column":40,"nodeType":"257","messageId":"258","endLine":158,"endColumn":42},{"ruleId":"241","severity":1,"message":"301","line":165,"column":13,"nodeType":"234","messageId":"235","endLine":165,"endColumn":27},{"ruleId":"241","severity":1,"message":"302","line":165,"column":29,"nodeType":"234","messageId":"235","endLine":165,"endColumn":35},{"ruleId":"241","severity":1,"message":"303","line":165,"column":37,"nodeType":"234","messageId":"235","endLine":165,"endColumn":48},{"ruleId":"241","severity":1,"message":"300","line":165,"column":94,"nodeType":"234","messageId":"235","endLine":165,"endColumn":108},{"ruleId":"241","severity":1,"message":"301","line":179,"column":13,"nodeType":"234","messageId":"235","endLine":179,"endColumn":27},{"ruleId":"241","severity":1,"message":"300","line":179,"column":60,"nodeType":"234","messageId":"235","endLine":179,"endColumn":74},{"ruleId":"241","severity":1,"message":"304","line":228,"column":11,"nodeType":"234","messageId":"235","endLine":228,"endColumn":24},{"ruleId":"241","severity":1,"message":"305","line":229,"column":11,"nodeType":"234","messageId":"235","endLine":229,"endColumn":24},{"ruleId":"241","severity":1,"message":"306","line":2,"column":40,"nodeType":"234","messageId":"235","endLine":2,"endColumn":46},{"ruleId":"241","severity":1,"message":"307","line":4,"column":10,"nodeType":"234","messageId":"235","endLine":4,"endColumn":23},{"ruleId":"241","severity":1,"message":"308","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":18},{"ruleId":"241","severity":1,"message":"278","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":19},{"ruleId":"241","severity":1,"message":"309","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":14},{"ruleId":"241","severity":1,"message":"310","line":11,"column":8,"nodeType":"234","messageId":"235","endLine":11,"endColumn":18},{"ruleId":"241","severity":1,"message":"297","line":13,"column":8,"nodeType":"234","messageId":"235","endLine":13,"endColumn":18},{"ruleId":"241","severity":1,"message":"311","line":16,"column":8,"nodeType":"234","messageId":"235","endLine":16,"endColumn":12},{"ruleId":"241","severity":1,"message":"242","line":16,"column":16,"nodeType":"234","messageId":"235","endLine":16,"endColumn":21},{"ruleId":"241","severity":1,"message":"312","line":20,"column":7,"nodeType":"234","messageId":"235","endLine":20,"endColumn":13},{"ruleId":"241","severity":1,"message":"313","line":46,"column":11,"nodeType":"234","messageId":"235","endLine":46,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":61,"column":68,"nodeType":"266","messageId":"267","endLine":61,"endColumn":74},{"ruleId":"241","severity":1,"message":"247","line":1,"column":18,"nodeType":"234","messageId":"235","endLine":1,"endColumn":22},{"ruleId":"241","severity":1,"message":"314","line":1,"column":24,"nodeType":"234","messageId":"235","endLine":1,"endColumn":35},{"ruleId":"241","severity":1,"message":"248","line":1,"column":37,"nodeType":"234","messageId":"235","endLine":1,"endColumn":48},{"ruleId":"241","severity":1,"message":"286","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":15},{"ruleId":"241","severity":1,"message":"315","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":9},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'p' is assigned a value but never used.","Identifier","unusedVar",["316"],["317"],["316"],["317"],"'onClick' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'Label' is defined but never used.","'Separator' is defined but never used.","'MetaInfo' is defined but never used.","'NeoMorphCard' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ClusterChangeCommentDialog' is defined but never used.","'index' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'labelLocal' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["318"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'constants' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'line_height' is assigned a value but never used.","'font_size' is assigned a value but never used.","'SetStateAction' is defined but never used.","'ClusterSnippet' is defined but never used.","'DataPoint' is defined but never used.","'legend' is assigned a value but never used.","'ClusterInfoDict' is defined but never used.","'labelsAndData' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'IconButton' is defined but never used.","'Save' is defined but never used.","'createStyles' is defined but never used.","'Tooltip' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Cluster' is defined but never used.","'TextField' is defined but never used.",["316"],["317"],"'PropsForSidebar' is defined but never used.",["316"],["317"],"'Toolbar' is defined but never used.","'Typography' is defined but never used.","'join' is defined but never used.","'stubFalse' is defined but never used.","'clustersToShow' is assigned a value but never used.","'selected_datum' is assigned a value but never used.","'labels' is assigned a value but never used.","'labelChoice' is assigned a value but never used.","'mean_center_x' is assigned a value but never used.","'mean_center_y' is assigned a value but never used.","'Select' is defined but never used.","'PropsFromData' is defined but never used.","'truncate' is defined but never used.","'Button' is defined but never used.","'PersonIcon' is defined but never used.","'Data' is defined but never used.","'emails' is assigned a value but never used.","'classes' is assigned a value but never used.","'CardActions' is defined but never used.","'_' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},"Update the dependencies array to be: [labelLocal, props, selectedCluster]",{"range":"321","text":"322"},[2998,3015],"[labelLocal, props, selectedCluster]"]