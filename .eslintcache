[{"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js":"1","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js":"2","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js":"3","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js":"4","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js":"5","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js":"6","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js":"7","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js":"8","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js":"9","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js":"10","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx":"11","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx":"12","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx":"13","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx":"14","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx":"15","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx":"16","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx":"17","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx":"18","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx":"19","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx":"20","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx":"21","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx":"22","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx":"23","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx":"24","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx":"25","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar2.tsx":"26"},{"size":451,"mtime":1607874062990,"results":"27","hashOfConfig":"28"},{"size":485,"mtime":1612797706494,"results":"29","hashOfConfig":"28"},{"size":4948,"mtime":1607874062991,"results":"30","hashOfConfig":"28"},{"size":1570,"mtime":1607874062988,"results":"31","hashOfConfig":"28"},{"size":9278,"mtime":1607874062988,"results":"32","hashOfConfig":"28"},{"size":519,"mtime":1609349848460,"results":"33","hashOfConfig":"28"},{"size":753,"mtime":1609877020615,"results":"34","hashOfConfig":"28"},{"size":978,"mtime":1610638122448,"results":"35","hashOfConfig":"28"},{"size":1563,"mtime":1610662485820,"results":"36","hashOfConfig":"28"},{"size":185,"mtime":1611271763856,"results":"37","hashOfConfig":"28"},{"size":5884,"mtime":1612908919153,"results":"38","hashOfConfig":"28"},{"size":16532,"mtime":1612881169697,"results":"39","hashOfConfig":"28"},{"size":6885,"mtime":1612907271296,"results":"40","hashOfConfig":"28"},{"size":1310,"mtime":1612909546299,"results":"41","hashOfConfig":"28"},{"size":2806,"mtime":1612894309932,"results":"42","hashOfConfig":"28"},{"size":12783,"mtime":1612895475688,"results":"43","hashOfConfig":"28"},{"size":1829,"mtime":1612960030319,"results":"44","hashOfConfig":"28"},{"size":1277,"mtime":1612014720566,"results":"45","hashOfConfig":"28"},{"size":904,"mtime":1611278770069,"results":"46","hashOfConfig":"28"},{"size":3525,"mtime":1612893812105,"results":"47","hashOfConfig":"28"},{"size":10072,"mtime":1612897635463,"results":"48","hashOfConfig":"28"},{"size":2124,"mtime":1612894579480,"results":"49","hashOfConfig":"28"},{"size":3206,"mtime":1612894995361,"results":"50","hashOfConfig":"28"},{"size":3986,"mtime":1612796943219,"results":"51","hashOfConfig":"28"},{"size":3852,"mtime":1612025530498,"results":"52","hashOfConfig":"28"},{"size":2099,"mtime":1612959505752,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"mxeu8k",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js",[],["118","119"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js",["120"],"import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n",["121","122"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js",[],["123","124"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js",["125"],"import React from 'react';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n            transition: 'all .2s ease-in-out',\n            '&:hover': {\n                boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n                marginBottom: '54px'\n            }\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n        p: {\n            display: 'inline-block',\n            marginBlockStart: '1em',\n            marginBlockEnd: '1em',\n            marginInlineStart: '0px',\n            marginInlineEnd: '1em',\n        },\n    })\n\n/**\n * \n * @param comments is the subset of the data which has label @param label\n * @param label is the label of said comments\n */\nexport default function ClusterSnippet({ label, labels, data, ...otherProps }) {\n    const classes = useStyles()\n\n    const correctLabels = labels.filter(({ label_kmedoids, label_kmeans }) => label_kmedoids === label)\n    const size = correctLabels.length\n\n    const onClick = (e) => null\n\n    return (\n\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            <h3>{label}</h3>\n            <p className={classes.p}>Size: {size}</p>\n            <p className={classes.p}>Density: 41</p>\n        </div>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx",["126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx",["140","141","142","143","144","145","146","147","148"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx",["149","150","151","152","153","154","155"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx",["156","157","158","159","160","161","162","163","164"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx",["165","166","167"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx",["168","169","170","171","172","173","174","175","176","177"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx",["178","179"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx",["180","181","182","183"],"import { PropsForSidebar } from '../../Sidebar'\nimport { Cluster, ClusterInfo, DataPoint } from '../../Data'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport NeoMorphCard from './NeoMorphCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent } from '@material-ui/core'\n\n\ntype PropsMetaInfos = {\n    selectedClusterInfo: ClusterInfo\n} & PropsForSidebar\n\nconst useStyles = makeStyles((theme) => ({\n    styleContainer: {\n        display: 'block',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    }\n}))\n\nexport default function MetaInfo(props: PropsMetaInfos) {\n    const classes = useStyles()\n    const { selectedClusterInfo } = props\n\n    const prct = ((selectedClusterInfo?.size || 0) * 100 / (props.data?.length || 1)).toFixed(2)\n    return (\n        <Card className={classes.styleContainer}>\n            <CardContent>\n                <p><b>Size:</b> {selectedClusterInfo?.size || 0} of {props.data?.length} comments in total</p>\n                <p><b>Size (in %):</b> {prct} %</p>\n                <p><b>Density</b> (lower is better): {selectedClusterInfo?.quality?.toFixed(3) || 0}</p>\n            </CardContent>\n        </Card>\n    )\n}",["184","185"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx",["186","187","188"],"import { PropsForSidebar } from '../../Sidebar'\nimport { createUseStyles } from 'react-jss'\nimport { DataPoint } from '../../Data'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n    })\n\ntype NeoMorphProps = {\n    children: React.ReactNode\n}\n\nexport default function NeoMorphCard(props: NeoMorphProps) {\n    const classes = useStyles()\n\n    return (\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            {props.children}\n        </div>\n    )\n}",["189","190"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx",["191","192","193","194","195","196"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx",["197","198","199","200","201","202","203","204","205","206"],"import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport { Coordinate, PropsFromData } from '../Data'\nimport { ZoomBehavior } from 'd3-zoom'\nimport _, { join, stubFalse } from 'lodash'\n\nexport type PropsForProjection = {\n  width: number,\n  height: number,\n  sidebar_ctx: number,\n  selectedCluster: string | null,\n  selectCluster: (newLabel: string | null) => void,\n  setSelectedDatum: (newDatumIndex: number) => void,\n  selected_datum: number | null,\n  searchResultIndices: object & {\n    [key: string]: any | null\n  },\n} & PropsFromData\n\n\nclass Projection extends Component<PropsForProjection, {}> {\n  ref: SVGSVGElement | null = null\n  svg: d3.Selection<SVGSVGElement, any, null, undefined> | null = null\n  scaleTransform: any = null\n  zoomBehavior: ZoomBehavior<SVGSVGElement, Coordinate> | null = null\n\n  constructor(props: PropsForProjection) {\n    super(props)\n    this.state = {}\n  }\n\n  /**\n   * only show given coordinates that are in clustersToShow\n   * @param coords \n   * @param clustersToShow \n   */\n  getIntersectionCoordinatesClustersToShow(coords: Coordinate[], clustersToShow: string[]) {\n    return coords.filter(\n      (coord: Coordinate) => {\n        let labelOfCoord = this.props.labels![coord.index].label_kmedoids\n        if (clustersToShow.includes(`${labelOfCoord}`)) return true\n        return false\n      }\n    ) as Coordinate[]\n  }\n\n  /** \n   * draws scatter plot\n   */\n  drawScatterPlot() {\n    if (!this.ref) return\n\n    const { width, height, setSelectedDatum, allCoordinates,\n      clustersToShow, selectCluster, labels } = this.props\n    this.svg = d3.select(this.ref)\n\n\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(allCoordinates!, clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n    const circles = this.svg.selectAll(\"circle\")\n      .data(coordsToShow)\n      .join(\"circle\")\n      .attr('id', d => d.index)\n      .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n      .attr(\"fill\", 'white')\n      .attr(\"r\", 3)\n\n    // this click event causes the react lifecycle method componentDidUpdate\n    // to be called. There, we'll update the colors. (the props in this\n    // function body aren't up to date at that point)\n    circles.on(\"click\", event => {\n      let selected_datum_i = parseInt(event.target.id)\n      setSelectedDatum(selected_datum_i)\n      selectCluster(labels![selected_datum_i].label_kmedoids)\n    })\n\n    // zoom behavior\n    this.zoomBehavior = this.getZoomBehavior(circles)\n    this.svg.call(this.zoomBehavior)\n\n    // start with scaled up init view if first time, else take previours scale state \n    this.svg.call(this.zoomBehavior.transform, this.scaleTransform || this.getInitScale(width, height))\n\n    if (this.props.selectedCluster) this.updateColorPoints()\n  }\n\n  /** \n   * returns function which applies a transformation after each zoom\n   * event (that is, dragging around + zooming).\n   * \n   * @param selection is the selection of nodes which should be transformed\n   * @returns a zoomBehavior function, to be called on the node on which this behavior\n   * should be bound to.\n   */\n  getZoomBehavior(selection: d3.Selection<any | null, Coordinate, any | null, any | null>): ZoomBehavior<any, any> {\n    return d3.zoom().on(\"zoom\", (event) => {\n      this.scaleTransform = event.transform\n      selection.attr(\"transform\", (d: Coordinate) => {\n        let coordinateAsArray = [d.x, d.y]\n        return `translate(${event.transform.apply(coordinateAsArray)})`\n      })\n    })\n  }\n\n  /** \n   * @param {int} width the width of the surrounding svg container\n   * @param {int} height the height of the surrounding svg container\n   * @returns a zoom behavior function with a scale factor that scales\n   * the data to width and height\n   * \n   * NOTE: assumes that the scale defined in {Data.js} is [0,100]\n   */\n  getInitScale(width: number, height: number) {\n    const scaleFactor = Math.min(width / 100, height / 100) // factor to either fill horizontally or vertically\n    return d3.zoomIdentity.scale(scaleFactor)\n  }\n\n  componentDidMount() {\n    this.drawScatterPlot()\n  }\n\n  /**\n   * updates all points so that the clicked point and the points belonging\n   * to its cluster have distinct colors\n   */\n  updateColorPoints() {\n    const { selected_datum, labels, allCoordinates, clustersToShow } = this.props\n    if (!this.svg || !labels) return\n\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(allCoordinates!, clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n\n    this.svg.selectAll('circle')\n      .data(coordsToShow)\n      .attr('fill', d => {\n        if (d.index == selected_datum) return 'cyan'\n        if (this.props.selectedCluster == labels[d.index].label_kmedoids) return 'green'\n        return 'white'\n      })\n  }\n\n  highlightSearchResults() {\n    if (!this.svg) return\n    const { selected_datum, labels, labelChoice, allCoordinates, searchResultIndices, clustersToShow } = this.props\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(allCoordinates!, clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n    this.svg.selectAll('circle')\n      .data(coordsToShow)\n      .attr('fill', d => {\n        if (searchResultIndices[d.index]) return 'green'\n        return 'white'\n      })\n  }\n\n  /** highlights the comment the user hovers over in the detail pane */\n  showHoveredComment() {\n    const { selected_datum, labels, allCoordinates, clustersToShow, hoveredCommentCoordinate } = this.props\n    if (!this.svg || !labels) return\n\n    var coordsToShow = this.getIntersectionCoordinatesClustersToShow(allCoordinates!, clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n    this.svg.selectAll('circle')\n      .data(hoveredCommentCoordinate ? [...coordsToShow, hoveredCommentCoordinate] : coordsToShow, (d: any) => d.index)\n      .join(\n        enter => enter.append('circle')\n          .attr('fill', 'cyan')\n          .attr('r', '5')\n          .attr(\"transform\", d => `translate(${this.scaleTransform.k * d.x + this.scaleTransform.x}, ${this.scaleTransform.k * d.y + this.scaleTransform.y})`)\n      )\n  }\n\n  /** zooms around so that cluster center is in the center of svg viewport and all clusters are visible */\n  zoomAroundCluster() {\n    if (!this.zoomBehavior) return\n    if (!this.svg) return\n    if (!this.props.selectedCluster) { // if unselected cluster, show overview\n      const scaleFactor = this.getInitScale(this.props.width, this.props.height)\n\n      this.svg?.transition()\n      .duration(1000)\n      .call(\n        this.zoomBehavior.transform,\n        d3.zoomIdentity.scale(scaleFactor.k)\n      )\n      return\n    }\n\n    const numNeighbors = this.props.coordinatesParameters.numNeighborsParameter\n    const minDist = this.props.coordinatesParameters.minDistParameter\n    if (!this.props.allCoordinatesFull?.[numNeighbors]?.[minDist]) return\n\n    const allCoordsOfSelectedCluster = this.props.labels?.filter(\n      (el, i) => (el.label_kmedoids === this.props.selectedCluster) ? true : false)\n      .map((el, i) => this.props.allCoordinatesFull?.[numNeighbors]?.[minDist]?.[i]!)\n    \n    const mean_x = _.meanBy(allCoordsOfSelectedCluster, 'x') || 15\n    const mean_y = _.meanBy(allCoordsOfSelectedCluster, 'y') || 15\n    // TODO max x and max y, min x and min y, then scale factor just like below\n    // position where mean point is in the center of viewport\n    const mean_center_x = this.props.width / 2 - mean_x\n    const mean_center_y = this.props.height / 2 - mean_y\n    const delta_x = _.maxBy(allCoordsOfSelectedCluster, 'x')?.x || 0 - (_.minBy(allCoordsOfSelectedCluster, 'x')?.x || 0)\n    const delta_y = _.maxBy(allCoordsOfSelectedCluster, 'y')?.y || 0 - (_.minBy(allCoordsOfSelectedCluster, 'y')?.y || 0)\n    const scaleFactor = Math.min(this.props.width/delta_x, this.props.height/delta_y)\n\n    console.log([this.svg, this.zoomBehavior, mean_x, mean_y, scaleFactor])\n\n    this.svg?.transition()\n      .duration(500)\n      .call(\n        this.zoomBehavior.translateTo,\n        mean_x, mean_y\n      )\n      .transition()\n      .duration(500)\n      .call(\n        this.zoomBehavior.scaleTo,\n        scaleFactor * 1.3\n      )\n\n  }\n\n  hasCommentClickedOnChanged(prevProps: PropsForProjection) {\n    return prevProps.selected_datum !== this.props.selected_datum\n  }\n\n  haveCoordinatesChanged(prevProps: PropsForProjection) {\n    return !_.isEqual(_.sortBy(prevProps.allCoordinates), _.sortBy(this.props.allCoordinates))\n  }\n\n  haveSearchResultsChanged(prevProps: PropsForProjection) {\n    return prevProps.searchResultIndices !== this.props.searchResultIndices\n  }\n\n  haveClustersToShowChanged(prevProps: PropsForProjection) {\n    return !_.isEqual(_.sortBy(prevProps.clustersToShow), _.sortBy(this.props.clustersToShow))\n  }\n\n  hasSelectedClusterChanged(prevProps: PropsForProjection) {\n    return prevProps.selectedCluster !== this.props.selectedCluster\n  }\n\n  hasHoveredCommentCoordinateChanged(prevProps: PropsForProjection) {\n    return prevProps.hoveredCommentCoordinate?.index !== this.props.hoveredCommentCoordinate?.index\n  }\n\n  componentDidUpdate(prevProps: PropsForProjection, prevState: {}) {\n    if (this.hasCommentClickedOnChanged(prevProps)) {\n      this.updateColorPoints()\n      return\n    }\n    if (this.hasSelectedClusterChanged(prevProps)) {\n      this.updateColorPoints()\n      this.zoomAroundCluster()\n      return\n    }\n    if (this.haveCoordinatesChanged(prevProps) || this.haveClustersToShowChanged(prevProps)) {\n      this.drawScatterPlot()\n      this.updateColorPoints()\n      return\n    }\n    if (this.haveSearchResultsChanged(prevProps)) return this.highlightSearchResults()\n    if (this.hasHoveredCommentCoordinateChanged(prevProps)) return this.showHoveredComment()\n  }\n\n  render() {\n    const { width, height } = this.props\n    return (\n      <svg ref={(ref) => this.ref = ref} width={width} height={height} overflow=\"hidden\"></svg>\n    )\n  }\n}\n\nexport default Projection\n","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx",["207","208","209","210","211","212"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx",["213","214","215","216","217"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx",["218"],"import { Button, Card, CardActions, CardContent, makeStyles } from '@material-ui/core'\nimport _ from 'lodash'\nimport React, { useState } from 'react'\nimport { DataPoint } from '../../Data'\nimport { PropsForSidebar } from '../../Sidebar'\nimport ClusterChangeCommentDialog from './ClusterChangeCommentDialog'\n\n\n/**\n * used inside sidebar to display one comment\n * elem is one data point\n */\n\nexport type CommentProps = {\n    dense?: boolean,\n    /** i the the index of the comment in prop data */\n    i: number,\n    /** callback of cluster change for this comment, or null if not changed */\n    onMoveCluster: (newLabel: string | null, i: number) => void\n} & PropsForSidebar\n\nconst useStyles = makeStyles<any, {backgroundColor: string}>((theme) => ({\n    styleContainer: props => ({\n        display: 'block',\n        marginLeft: 0,\n        marginRight: 0,\n        marginBottom: theme.spacing(1),\n        backgroundColor: props.backgroundColor,\n        borderRadius: 0,\n    }),\n    styleMetaInfos: {\n        display: 'block',\n        width: '100%',\n        height: 'auto',\n    },\n    styleUsername: {\n        display: 'inline',\n        fontWeight: 'bold'\n    },\n    styleComment: {\n        marginBottom: '0',\n        marginTop: '8px'\n    },\n    styleDate: {\n        marginLeft: '8px',\n        display: 'inline',\n        color: 'LightGray',\n        fontStyle: 'italic',\n        fontSize: '0.9em'\n    },\n    btnsContainer: {\n        maxHeight: 0,\n        overflow: 'hidden',\n        transitionDelay: '0.2s',\n        transition: 'max-height 0.3s',\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        width: '100%',\n    },\n    rightAlign: {\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: '0'\n    },\n}))\n\n// styles for card content --> make denser\nconst useCardContentStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 8,\n        paddingBottom: 0,\n        paddingLeft: 16,\n        paddingRight: 16,\n    }\n}))\n\nexport default function Comment({ dense = false, data, i, onMoveCluster, added=false, removed=false, ...other }: CommentProps) {\n    const backgroundColor: string = added ? '#1d3d17' : removed ? '#3d171b' : \"auto\" \n    const classes = useStyles({backgroundColor: backgroundColor})\n    const cardContentStyles = useCardContentStyles()\n    const { publishedAt, authorName, cleaned } = data![i]\n    const [showClusterChangeDialog, setShowClusterChangeDialog] = useState(false)\n\n    const showPoint = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        other.setHoveredCommentCoordinate(i)\n    }\n\n    const hidePoint = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        other.setHoveredCommentCoordinate(null)\n    }\n\n    const dataPoint = _.find(other.dataChanged, ['i', i])\n\n    return (\n        <Card onMouseEnter={showPoint} onMouseLeave={hidePoint} className={classes.styleContainer}>\n            <CardContent classes={cardContentStyles}>\n                {dataPoint && <p style={{marginLeft: 0}} className={classes.styleDate}>{`from cluster ${dataPoint?.oldLabel.label_kmedoids} to ${dataPoint?.newLabel.label_kmedoids}`}</p>}\n                <div className={classes.styleMetaInfos}>\n                    <p className={classes.styleUsername}>{authorName}</p>\n                    <p className={classes.styleDate}>{publishedAt}</p>\n                </div>\n                <p className={classes.styleComment}>{cleaned}</p>\n            </CardContent>\n            <CardActions>\n                <Button onClick={() => setShowClusterChangeDialog(true)}>Move to other Cluster</Button>\n            </CardActions>\n            <ClusterChangeCommentDialog\n                open={showClusterChangeDialog}\n                onMoveCluster={(clusterSelected) => {\n                    setShowClusterChangeDialog(false)\n                    onMoveCluster(clusterSelected, i)\n                }}\n                i={i}\n                data={data}\n                {...other}\n            />\n        </Card>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx",["219","220","221","222","223","224","225","226"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Data, { Label } from '../../Data';\nimport { CommentProps } from './Comment';\nimport _ from 'lodash';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\n\ntype ClusterChangeCommentDialogProps = {\n    open: boolean,\n} & CommentProps\n\n\nexport default function ClusterChangeCommentDialog({\n    open,\n    data,\n    labels,\n    clustersToShow,\n    clusters,\n    onClose,\n    i,\n    selectedCluster,\n    onMoveCluster,\n    ...other\n}: ClusterChangeCommentDialogProps) {\n    const classes = useStyles();\n\n    const remainingClusters = _.without(Object.keys(clusters), ...clustersToShow)\n\n    return (\n        <Dialog onClose={() => onMoveCluster(null, i)} aria-labelledby=\"dialog for changing the cluster of the selected comment\" open={open}>\n            <DialogTitle>Change Cluster</DialogTitle>\n            <List>\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Selected Cluster</ListSubheader>\n                <ListItem onClick={() => onMoveCluster(selectedCluster, i)} button key={`clusterpicker-${-1}`}>\n                    <ListItemText primary={selectedCluster} secondary={`size: ${clusters[selectedCluster || \"\"]?.size}    density: ${clusters[selectedCluster || \"\"]?.quality.toFixed(3)}`} />\n                </ListItem>\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Visible Clusters</ListSubheader>\n                {\n                    clustersToShow.map((cluster: string) => {\n                        if (cluster === labels![i].label_kmedoids) return\n                        return (\n                            <ListItem onClick={() => onMoveCluster(cluster, i)} button key={`clusterpicker-${cluster}`}>\n                                <ListItemText primary={cluster} secondary={`size: ${clusters[cluster].size}    density: ${clusters[cluster].quality.toFixed(3)}`} />\n                            </ListItem>)\n                    })\n                }\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\" disableSticky>Other Clusters</ListSubheader>\n                {\n                    remainingClusters.map((cluster: string) => (\n                        <ListItem onClick={() => onMoveCluster(cluster, i)} button key={`clusterpicker-${cluster}`}>\n                            <ListItemText primary={cluster} secondary={`size: ${clusters[cluster].size}    density: ${clusters[cluster].quality.toFixed(3)}`} />\n                        </ListItem>)\n                    )\n                }\n                <ListItem onClick={() => onMoveCluster('new', i)} autoFocus button>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Add to new Cluster\" secondary={'The name of the new cluster is \"new\" by default'}/>\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar2.tsx",["227","228","229","230","231","232","233","234","235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":7,"column":17,"nodeType":"242","messageId":"243","endLine":7,"endColumn":18},{"ruleId":"236","replacedBy":"244"},{"ruleId":"238","replacedBy":"245"},{"ruleId":"236","replacedBy":"246"},{"ruleId":"238","replacedBy":"247"},{"ruleId":"240","severity":1,"message":"248","line":42,"column":11,"nodeType":"242","messageId":"243","endLine":42,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":2,"column":21,"nodeType":"242","messageId":"243","endLine":2,"endColumn":26},{"ruleId":"249","severity":1,"message":"251","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":17},{"ruleId":"249","severity":1,"message":"252","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":20},{"ruleId":"249","severity":1,"message":"253","line":9,"column":10,"nodeType":"242","messageId":"243","endLine":9,"endColumn":13},{"ruleId":"249","severity":1,"message":"254","line":9,"column":15,"nodeType":"242","messageId":"243","endLine":9,"endColumn":19},{"ruleId":"249","severity":1,"message":"255","line":9,"column":21,"nodeType":"242","messageId":"243","endLine":9,"endColumn":32},{"ruleId":"249","severity":1,"message":"256","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":34},{"ruleId":"249","severity":1,"message":"257","line":12,"column":10,"nodeType":"242","messageId":"243","endLine":12,"endColumn":15},{"ruleId":"258","severity":1,"message":"259","line":32,"column":55,"nodeType":"260","messageId":"261","endLine":32,"endColumn":57},{"ruleId":"262","severity":1,"message":"263","line":66,"column":29,"nodeType":"264","messageId":"265","endLine":66,"endColumn":35},{"ruleId":"258","severity":1,"message":"266","line":92,"column":48,"nodeType":"260","messageId":"261","endLine":92,"endColumn":50},{"ruleId":"258","severity":1,"message":"266","line":93,"column":48,"nodeType":"260","messageId":"261","endLine":93,"endColumn":50},{"ruleId":"258","severity":1,"message":"266","line":94,"column":52,"nodeType":"260","messageId":"261","endLine":94,"endColumn":54},{"ruleId":"258","severity":1,"message":"266","line":95,"column":52,"nodeType":"260","messageId":"261","endLine":95,"endColumn":54},{"ruleId":"249","severity":1,"message":"267","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":173,"column":23,"nodeType":"270","messageId":"271","endLine":173,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":173,"column":66,"nodeType":"260","messageId":"261","endLine":173,"endColumn":68},{"ruleId":"268","severity":1,"message":"269","line":174,"column":7,"nodeType":"270","messageId":"271","endLine":174,"endColumn":9},{"ruleId":"268","severity":1,"message":"272","line":174,"column":7,"nodeType":"270","messageId":"271","endLine":174,"endColumn":9},{"ruleId":"268","severity":1,"message":"272","line":174,"column":27,"nodeType":"270","messageId":"271","endLine":174,"endColumn":29},{"ruleId":"258","severity":1,"message":"259","line":174,"column":62,"nodeType":"260","messageId":"261","endLine":174,"endColumn":64},{"ruleId":"258","severity":1,"message":"266","line":444,"column":63,"nodeType":"260","messageId":"261","endLine":444,"endColumn":65},{"ruleId":"262","severity":1,"message":"263","line":444,"column":73,"nodeType":"264","messageId":"265","endLine":444,"endColumn":79},{"ruleId":"249","severity":1,"message":"273","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":13},{"ruleId":"249","severity":1,"message":"274","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":9,"column":25,"nodeType":"242","messageId":"243","endLine":9,"endColumn":30},{"ruleId":"249","severity":1,"message":"275","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":15},{"ruleId":"249","severity":1,"message":"276","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":23},{"ruleId":"249","severity":1,"message":"277","line":17,"column":10,"nodeType":"242","messageId":"243","endLine":17,"endColumn":11},{"ruleId":"249","severity":1,"message":"278","line":140,"column":9,"nodeType":"242","messageId":"243","endLine":140,"endColumn":13},{"ruleId":"249","severity":1,"message":"279","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"280","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":15},{"ruleId":"249","severity":1,"message":"251","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"281","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"282","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"249","severity":1,"message":"283","line":6,"column":27,"nodeType":"242","messageId":"243","endLine":6,"endColumn":50},{"ruleId":"249","severity":1,"message":"284","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":22},{"ruleId":"249","severity":1,"message":"285","line":8,"column":25,"nodeType":"242","messageId":"243","endLine":8,"endColumn":34},{"ruleId":"249","severity":1,"message":"276","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":23},{"ruleId":"249","severity":1,"message":"286","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":31},{"ruleId":"249","severity":1,"message":"287","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":22},{"ruleId":"249","severity":1,"message":"285","line":6,"column":10,"nodeType":"242","messageId":"243","endLine":6,"endColumn":19},{"ruleId":"249","severity":1,"message":"288","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"249","severity":1,"message":"289","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"290","line":12,"column":8,"nodeType":"242","messageId":"243","endLine":12,"endColumn":15},{"ruleId":"249","severity":1,"message":"291","line":16,"column":19,"nodeType":"242","messageId":"243","endLine":16,"endColumn":30},{"ruleId":"249","severity":1,"message":"250","line":16,"column":32,"nodeType":"242","messageId":"243","endLine":16,"endColumn":37},{"ruleId":"249","severity":1,"message":"292","line":16,"column":39,"nodeType":"242","messageId":"243","endLine":16,"endColumn":52},{"ruleId":"249","severity":1,"message":"293","line":27,"column":6,"nodeType":"242","messageId":"243","endLine":27,"endColumn":21},{"ruleId":"249","severity":1,"message":"294","line":34,"column":5,"nodeType":"242","messageId":"243","endLine":34,"endColumn":18},{"ruleId":"249","severity":1,"message":"295","line":264,"column":11,"nodeType":"242","messageId":"243","endLine":264,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":273,"column":8,"nodeType":"298","endLine":273,"endColumn":10,"suggestions":"299"},{"ruleId":"249","severity":1,"message":"300","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":22},{"ruleId":"249","severity":1,"message":"267","line":7,"column":17,"nodeType":"242","messageId":"243","endLine":7,"endColumn":25},{"ruleId":"249","severity":1,"message":"301","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":17},{"ruleId":"249","severity":1,"message":"285","line":2,"column":32,"nodeType":"242","messageId":"243","endLine":2,"endColumn":41},{"ruleId":"249","severity":1,"message":"302","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":17},{"ruleId":"249","severity":1,"message":"252","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":20},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"249","severity":1,"message":"303","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"285","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":19},{"ruleId":"249","severity":1,"message":"302","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":17},{"ruleId":"236","replacedBy":"304"},{"ruleId":"238","replacedBy":"305"},{"ruleId":"249","severity":1,"message":"306","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"290","line":2,"column":41,"nodeType":"242","messageId":"243","endLine":2,"endColumn":48},{"ruleId":"249","severity":1,"message":"307","line":2,"column":50,"nodeType":"242","messageId":"243","endLine":2,"endColumn":57},{"ruleId":"249","severity":1,"message":"308","line":2,"column":59,"nodeType":"242","messageId":"243","endLine":2,"endColumn":69},{"ruleId":"258","severity":1,"message":"266","line":60,"column":68,"nodeType":"260","messageId":"261","endLine":60,"endColumn":70},{"ruleId":"258","severity":1,"message":"266","line":68,"column":68,"nodeType":"260","messageId":"261","endLine":68,"endColumn":70},{"ruleId":"249","severity":1,"message":"309","line":5,"column":13,"nodeType":"242","messageId":"243","endLine":5,"endColumn":17},{"ruleId":"249","severity":1,"message":"310","line":5,"column":19,"nodeType":"242","messageId":"243","endLine":5,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":138,"column":21,"nodeType":"260","messageId":"261","endLine":138,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":139,"column":40,"nodeType":"260","messageId":"261","endLine":139,"endColumn":42},{"ruleId":"249","severity":1,"message":"311","line":146,"column":13,"nodeType":"242","messageId":"243","endLine":146,"endColumn":27},{"ruleId":"249","severity":1,"message":"312","line":146,"column":29,"nodeType":"242","messageId":"243","endLine":146,"endColumn":35},{"ruleId":"249","severity":1,"message":"313","line":146,"column":37,"nodeType":"242","messageId":"243","endLine":146,"endColumn":48},{"ruleId":"249","severity":1,"message":"311","line":160,"column":13,"nodeType":"242","messageId":"243","endLine":160,"endColumn":27},{"ruleId":"249","severity":1,"message":"314","line":204,"column":11,"nodeType":"242","messageId":"243","endLine":204,"endColumn":24},{"ruleId":"249","severity":1,"message":"315","line":205,"column":11,"nodeType":"242","messageId":"243","endLine":205,"endColumn":24},{"ruleId":"249","severity":1,"message":"316","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":26},{"ruleId":"249","severity":1,"message":"292","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":23},{"ruleId":"249","severity":1,"message":"317","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":18},{"ruleId":"249","severity":1,"message":"318","line":27,"column":12,"nodeType":"242","messageId":"243","endLine":27,"endColumn":34},{"ruleId":"249","severity":1,"message":"319","line":28,"column":31,"nodeType":"242","messageId":"243","endLine":28,"endColumn":51},{"ruleId":"249","severity":1,"message":"320","line":44,"column":29,"nodeType":"242","messageId":"243","endLine":44,"endColumn":33},{"ruleId":"249","severity":1,"message":"279","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"267","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"249","severity":1,"message":"321","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":22},{"ruleId":"249","severity":1,"message":"322","line":2,"column":39,"nodeType":"242","messageId":"243","endLine":2,"endColumn":56},{"ruleId":"249","severity":1,"message":"290","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":15},{"ruleId":"249","severity":1,"message":"285","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":19},{"ruleId":"249","severity":1,"message":"323","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"249","severity":1,"message":"324","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":18},{"ruleId":"249","severity":1,"message":"308","line":13,"column":8,"nodeType":"242","messageId":"243","endLine":13,"endColumn":18},{"ruleId":"249","severity":1,"message":"325","line":16,"column":8,"nodeType":"242","messageId":"243","endLine":16,"endColumn":12},{"ruleId":"249","severity":1,"message":"250","line":16,"column":16,"nodeType":"242","messageId":"243","endLine":16,"endColumn":21},{"ruleId":"249","severity":1,"message":"326","line":20,"column":7,"nodeType":"242","messageId":"243","endLine":20,"endColumn":13},{"ruleId":"249","severity":1,"message":"327","line":46,"column":11,"nodeType":"242","messageId":"243","endLine":46,"endColumn":18},{"ruleId":"262","severity":1,"message":"263","line":61,"column":68,"nodeType":"264","messageId":"265","endLine":61,"endColumn":74},{"ruleId":"249","severity":1,"message":"279","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"280","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":15},{"ruleId":"249","severity":1,"message":"251","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"281","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"282","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"249","severity":1,"message":"328","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":23},{"ruleId":"249","severity":1,"message":"283","line":6,"column":27,"nodeType":"242","messageId":"243","endLine":6,"endColumn":50},{"ruleId":"249","severity":1,"message":"285","line":8,"column":25,"nodeType":"242","messageId":"243","endLine":8,"endColumn":34},{"ruleId":"249","severity":1,"message":"276","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":23},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'p' is assigned a value but never used.","Identifier","unusedVar",["329"],["330"],["329"],["330"],"'onClick' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'Label' is defined but never used.","'Separator' is defined but never used.","'NeoMorphCard' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'ClusterChangeCommentDialog' is defined but never used.","'index' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'About' is defined but never used.","'SearchBar' is defined but never used.","'least' is defined but never used.","'SlidersParamter' is defined but never used.","'p' is defined but never used.","'grem' is assigned a value but never used.","'Component' is defined but never used.","'Comment' is defined but never used.","'Select' is defined but never used.","'ClusterMerger' is defined but never used.","'PropsForClusterOverview' is defined but never used.","'ClusterDetails' is defined but never used.","'DataPoint' is defined but never used.","'SetStateAction' is defined but never used.","'ClusterSnippet' is defined but never used.","'MouseEventHandler' is defined but never used.","'lighten' is defined but never used.","'Toolbar' is defined but never used.","'DataChanged' is defined but never used.","'PropsFromData' is defined but never used.","'ClusterInfoDict' is defined but never used.","'labelsAndData' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rowsSorted' and 'setClustersToShow'. Either include them or remove the dependency array. If 'setClustersToShow' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["331"],"'createStyles' is defined but never used.","'Cluster' is defined but never used.","'TextField' is defined but never used.","'PropsForSidebar' is defined but never used.",["329"],["330"],"'useEffect' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.","'join' is defined but never used.","'stubFalse' is defined but never used.","'selected_datum' is assigned a value but never used.","'labels' is assigned a value but never used.","'labelChoice' is assigned a value but never used.","'mean_center_x' is assigned a value but never used.","'mean_center_y' is assigned a value but never used.","'CircularProgress' is defined but never used.","'truncate' is defined but never used.","'isReloadingCoordinates' is assigned a value but never used.","'setCoordinatesToLoad' is assigned a value but never used.","'size' is assigned a value but never used.","'NumNeighbors' is defined but never used.","'num_neighbors_arr' is defined but never used.","'Button' is defined but never used.","'PersonIcon' is defined but never used.","'Data' is defined but never used.","'emails' is assigned a value but never used.","'classes' is assigned a value but never used.","'ClusterOverview' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},"Update the dependencies array to be: [rowsSorted, setClustersToShow]",{"range":"334","text":"335"},[8902,8904],"[rowsSorted, setClustersToShow]"]