[{"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js":"1","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js":"2","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js":"3","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js":"4","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js":"5","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js":"6","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js":"7","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js":"8","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js":"9","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js":"10","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx":"11","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx":"12","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx":"13","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx":"14","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx":"15","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx":"16","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx":"17","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx":"18","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx":"19","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx":"20","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx":"21","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx":"22","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx":"23","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx":"24","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx":"25"},{"size":451,"mtime":1607874062990,"results":"26","hashOfConfig":"27"},{"size":437,"mtime":1610987370591,"results":"28","hashOfConfig":"27"},{"size":4948,"mtime":1607874062991,"results":"29","hashOfConfig":"27"},{"size":1570,"mtime":1607874062988,"results":"30","hashOfConfig":"27"},{"size":9278,"mtime":1607874062988,"results":"31","hashOfConfig":"27"},{"size":519,"mtime":1609349848460,"results":"32","hashOfConfig":"27"},{"size":753,"mtime":1609877020615,"results":"33","hashOfConfig":"27"},{"size":978,"mtime":1610638122448,"results":"34","hashOfConfig":"27"},{"size":1563,"mtime":1610662485820,"results":"35","hashOfConfig":"27"},{"size":185,"mtime":1611271763856,"results":"36","hashOfConfig":"27"},{"size":4998,"mtime":1612016309855,"results":"37","hashOfConfig":"27"},{"size":15667,"mtime":1612017125666,"results":"38","hashOfConfig":"27"},{"size":6502,"mtime":1611844962501,"results":"39","hashOfConfig":"27"},{"size":1811,"mtime":1611957650023,"results":"40","hashOfConfig":"27"},{"size":482,"mtime":1611936423069,"results":"41","hashOfConfig":"27"},{"size":13216,"mtime":1612016764802,"results":"42","hashOfConfig":"27"},{"size":1704,"mtime":1611950518001,"results":"43","hashOfConfig":"27"},{"size":1277,"mtime":1612014720566,"results":"44","hashOfConfig":"27"},{"size":904,"mtime":1611278770069,"results":"45","hashOfConfig":"27"},{"size":4006,"mtime":1612016522658,"results":"46","hashOfConfig":"27"},{"size":6838,"mtime":1611783662371,"results":"47","hashOfConfig":"27"},{"size":2499,"mtime":1611845611009,"results":"48","hashOfConfig":"27"},{"size":3010,"mtime":1611787386354,"results":"49","hashOfConfig":"27"},{"size":3717,"mtime":1611961594695,"results":"50","hashOfConfig":"27"},{"size":3855,"mtime":1612015760589,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"mxeu8k",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/index.js",[],["115","116"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/App.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/serviceWorker.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/About.js",["117"],"import React, { Component } from 'react'\nimport Markdown from 'react-remarkable'\nimport { about_text } from './Content'\n\nclass About extends Component {\n  render() {\n    let { grem, p } = this.props\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          background: '#222',\n          color: '#fff',\n          paddingTop: grem * 2,\n          overflowY: 'auto',\n          fontSize: 16,\n          lineHeight: 1.5,\n        }}\n      >\n        <div\n          style={{\n            background: '#333',\n            position: 'fixed',\n            left: 0,\n            top: 0,\n            right: 0,\n            padding: grem / 2,\n          }}\n        >\n          About\n          <button\n            onClick={() => {\n              this.props.toggleAbout(false)\n            }}\n            className=\"hover-555\"\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n              height: grem * 2,\n              width: grem * 2,\n              padding: grem / 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textDecoration: 'none',\n            }}\n          >\n            &times;\n          </button>\n        </div>\n        <div\n          style={{\n            maxWidth: grem * 30,\n            margin: '0 auto',\n            padding: grem / 2,\n            color: '#fff',\n          }}\n        >\n          <Markdown>{about_text}</Markdown>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n",["118","119"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Content.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Separator.js",[],["120","121"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/Select.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Store.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterSnippet.js",["122"],"import React from 'react';\nimport { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n            transition: 'all .2s ease-in-out',\n            '&:hover': {\n                boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n                marginBottom: '54px'\n            }\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n        p: {\n            display: 'inline-block',\n            marginBlockStart: '1em',\n            marginBlockEnd: '1em',\n            marginInlineStart: '0px',\n            marginInlineEnd: '1em',\n        },\n    })\n\n/**\n * \n * @param comments is the subset of the data which has label @param label\n * @param label is the label of said comments\n */\nexport default function ClusterSnippet({ label, labels, data, ...otherProps }) {\n    const classes = useStyles()\n\n    const correctLabels = labels.filter(({ label_kmedoids, label_kmeans }) => label_kmedoids === label)\n    const size = correctLabels.length\n\n    const onClick = (e) => null\n\n    return (\n\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            <h3>{label}</h3>\n            <p className={classes.p}>Size: {size}</p>\n            <p className={classes.p}>Density: 41</p>\n        </div>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/index.js",[],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterDetailsLayout.tsx",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Data.tsx",["138","139","140","141","142","143","144","145","146","147"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Layout.tsx",["148","149","150","151","152","153","154","155"],"import React, { Component } from 'react'\nimport Sidebar, { PropsForSidebar } from './Sidebar'\nimport Projection, { PropsForProjection } from './ProjectionElements/Projection'\nimport ProjectionParameters from './ProjectionElements/ProjectionParameters'\nimport About from './About'\nimport * as _ from 'lodash'\nimport SearchBar from \"material-ui-search-bar\"\nimport { PropsFromData, Label } from './Data'\nimport { least } from 'd3'\nimport { CircularProgress } from '@material-ui/core'\nimport SlidersParamter from './ProjectionElements/Sliders'\n\n// padding constructor\nfunction p(tb: number, lr: number) {\n  return `${tb}px ${lr}px`\n}\n\nexport type LayoutState = {\n  ww: number | null,\n  wh: number | null,\n  sidebar_height: number | null,\n  selected_datum: number | null,\n  searchInput: string,\n  // for faster lookup, as object of form {'id':position, ...} with position being rank in results\n  searchResultIndices: object,\n  /** is the cluster of which user wants a detail view */\n  selectedCluster: string | null,\n}\n\nclass Layout extends Component<PropsFromData, LayoutState> {\n  sidebar_ctx: any | null\n  sidebar_mount: any\n\n  constructor(props: PropsFromData) {\n    super(props)\n    this.state = {\n      ww: null,\n      wh: null,\n      sidebar_height: null,\n      selected_datum: null,\n      searchInput: \"\",\n      searchResultIndices: {},\n      selectedCluster: null,\n    }\n    this.sidebar_ctx = null\n    this.setSize = _.debounce(this.setSize.bind(this), 200)\n    this.setSelectedDatum = this.setSelectedDatum.bind(this)\n    this.updateSearchResultIndices = this.updateSearchResultIndices.bind(this)\n    this.selectCluster = this.selectCluster.bind(this)\n  }\n\n  selectCluster(newLabel: string | null) {\n    this.setState({\n      selectedCluster: newLabel\n    })\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight })\n    let sidebar_height = this.sidebar_mount.offsetHeight\n    this.setState({ sidebar_height: sidebar_height })\n    if (this.sidebar_ctx) this.sidebar_ctx.imageSmoothingEnabled = false\n  }\n\n  componentWillMount() {\n    this.setSize()\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setSize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize)\n  }\n\n  haveEmbeddingsChanged(prevProps: PropsFromData) {\n    return prevProps.embeddings !== this.props.embeddings || prevProps.embeddings.length !== this.props.embeddings.length\n  }\n\n  /**\n   * sets the selected datum which causes it to show in the sidebar \n   * @param {int} i is the index of the selected datum\n   */\n  setSelectedDatum(i: number | null) {\n    if (!this.props.labels) return\n    this.setState({\n      selected_datum: i,\n      selectedCluster: (i) ? this.props.labels[i].label_kmedoids : null\n    })\n  }\n\n\n  updateSearchResultIndices(searchTerm: string) {\n    if (searchTerm.length < 1) return\n    let searchResults = this.props.searchIndex?.search(searchTerm)\n    let searchResultsCleaned: any = searchResults?.map((result: lunr.Index.Result, i) => [result.ref, i])\n    this.setState({\n      searchInput: searchTerm,\n      searchResultIndices: Object.fromEntries(searchResultsCleaned),\n      selected_datum: null, // empty sidebar\n    })\n  }\n\n  render() {\n    let sidebar_ctx = this.sidebar_ctx\n    let line_height = 1.5\n    let sidebar_style: any = {\n      position: 'absolute', left: 0, top: 0,\n      height: '100vh', overflow: 'auto', background: '#222',\n      display: 'flex', flexDirection: 'column',\n    }\n    let main_style: any = {\n      position: 'relative', height: '100vh',\n      background: '#111', overflow: 'hidden',\n    }\n\n    let sidebar_image_size, sidebar_orientation\n    let font_size = 16\n    if (this.state.ww! < 800) { // media-query mobile\n      font_size = 14\n      sidebar_style = {\n        ...sidebar_style,\n        flexDirection: 'row',\n        width: '100%',\n        top: 'auto',\n        height: 'auto',\n        bottom: 0,\n      }\n      main_style = { width: this.state.ww, height: this.state.wh! - this.state.sidebar_height! }\n      sidebar_orientation = 'horizontal'\n    } else if (this.state.ww! < 1300) { // media query small desktops like laptops\n      let sidebar_width = this.state.ww! / 3\n      sidebar_style = {\n        ...sidebar_style,\n        width: sidebar_width,\n      }\n      main_style = {\n        ...main_style,\n        width: this.state.ww! - sidebar_width,\n        left: sidebar_width,\n        height: this.state.wh!,\n      }\n      sidebar_orientation = 'vertical'\n    } else { // media-query large desktops\n      let sidebar_width = this.state.ww! / 4\n      sidebar_style = {\n        ...sidebar_style,\n        width: sidebar_width,\n      }\n      main_style = {\n        ...main_style,\n        width: this.state.ww! - sidebar_width,\n        left: sidebar_width,\n        height: this.state.wh!,\n      }\n      sidebar_orientation = 'vertical'\n    }\n\n    let grem = font_size * line_height\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    }\n\n    const propsForSidebar: PropsForSidebar = {\n      ...this.props,\n      ...this.state,\n      setSelectedDatum: this.setSelectedDatum,\n      selectCluster: this.selectCluster,\n      sidebar_orientation: sidebar_orientation,\n    }\n    \n    const propsForProjection: PropsForProjection = {\n      ...this.props,\n      width: main_style.width,\n      height: main_style.height,\n      sidebar_ctx: sidebar_ctx,\n      selectedCluster: this.state.selectedCluster,\n      setSelectedDatum: this.setSelectedDatum,\n      selected_datum: this.state.selected_datum,\n      searchResultIndices: this.state.searchResultIndices,\n      selectCluster: this.selectCluster\n    }\n    \n\n    return this.state.ww! !== null ? (\n      <div style={general_style}>\n        <div style={{ position: 'absolute', zIndex: 10, left: '50%', marginLeft: '-10vw', right: '50%', top: '4vh', width: '30vw' }}>\n          <SearchBar\n            value={this.state.searchInput}\n            onChange={this.updateSearchResultIndices}\n          />\n        </div>\n        <div\n          style={sidebar_style}\n          ref={sidebar_mount => {\n            this.sidebar_mount = sidebar_mount\n          }}\n        >\n          <Sidebar {...propsForSidebar} />\n        </div>\n        <div style={main_style}>\n          <ProjectionParameters {...propsForProjection} />\n          <Projection {...propsForProjection}/>\n        </div>\n      </div>\n    ) : (\n        <div style={{ padding: '1rem' }}>Loading layout...</div>\n      )\n  }\n}\n\nexport default Layout\n",["156","157"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/Sidebar.tsx",["158","159","160","161","162","163","164"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterOverview.tsx",["165"],"import React from 'react';\nimport ClusterSnippet from './ClusterSnippet'\nimport ClusterTable from './ClusterTable';\nimport { PropsForSidebar } from '../../Sidebar';\n\n\nexport type PropsForClusterOverview = PropsForSidebar\n\n/**\n * \n * @param comments is the subset of the data which has label @param label\n * @param label is the label of said comments\n */\nexport default function ClusterOverview(props:PropsForClusterOverview) {\n    const labelSet = new Set()\n    for (let element of props.labels!) {\n        labelSet.add(element.label_kmedoids)\n    }\n\n    return (\n        <ClusterTable {...props}/>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterOverview/ClusterTable.tsx",["166","167","168","169","170","171","172","173"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterMenu.tsx",["174","175"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/MetaInfo.tsx",["176","177","178","179"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/NeoMorphCard.tsx",["180","181","182"],"import { PropsForSidebar } from '../../Sidebar'\nimport { createUseStyles } from 'react-jss'\nimport { DataPoint } from '../../Data'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = createUseStyles(\n    {\n        card: {\n            display: 'block',\n            margin: '32px 24px',\n            padding: '4px 16px',\n            position: 'relative',\n        },\n        neomorphism: {\n            borderRadius: '15px',\n            background: 'linear-gradient(145deg, #373737, #2e2e2e)',\n            boxShadow: '5px 5px 12px #181818, -5px -5px 12px #4e4e4e'\n        },\n    })\n\ntype NeoMorphProps = {\n    children: React.ReactNode\n}\n\nexport default function NeoMorphCard(props: NeoMorphProps) {\n    const classes = useStyles()\n\n    return (\n        <div className={`${classes.neomorphism} ${classes.card}`}>\n            {props.children}\n        </div>\n    )\n}",["183","184"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterMerger.tsx",["185","186","187"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Projection.tsx",["188","189","190","191","192"],"import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport { Coordinate, PropsFromData } from '../Data'\nimport { ZoomBehavior } from 'd3'\n\n\nexport type PropsForProjection = {\n  width: number,\n  height: number,\n  sidebar_ctx: number,\n  selectedCluster: string | null,\n  selectCluster: (newLabel: string | null) => void,\n  setSelectedDatum: (newDatumIndex: number) => void,\n  selected_datum: number | null,\n  searchResultIndices: object & {\n    [key: string]: any | null\n  }\n} & PropsFromData\n\n\nclass Projection extends Component<PropsForProjection, {}> {\n  ref: SVGSVGElement | null = null\n  svg: d3.Selection<SVGSVGElement, any, null, undefined> | null = null\n  scaleTransform: any = null\n\n  constructor(props: PropsForProjection) {\n    super(props)\n    this.state = {}\n  }\n\n  /**\n   * only show given coordinates that are in clustersToShow\n   * @param coords \n   * @param clustersToShow \n   */\n  getIntersectionCoordinatesClustersToShow(coords: Coordinate[], clustersToShow: string[]) {\n    return coords.filter(\n      (coord: Coordinate) => {\n        let labelOfCoord = this.props.labels![coord.index].label_kmedoids\n        if (clustersToShow.includes(`${labelOfCoord}`)) return true\n        return false\n      }\n    ) as Coordinate[]\n  }\n\n  /** \n   * draws scatter plot\n   */\n  drawScatterPlot() {\n    if (!this.ref) return\n\n    const { width, height, setSelectedDatum, getSelectedCoordinates, \n      clustersToShow, selectCluster, labels } = this.props\n    this.svg = d3.select(this.ref)\n\n\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(getSelectedCoordinates(), clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n    const circles = this.svg.selectAll(\"circle\")\n      .data(coordsToShow)\n      .join(\"circle\")\n      .attr('id', d => d.index)\n      .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n      .attr(\"fill\", 'white')\n      .attr(\"r\", 3)\n\n    // this click event causes the react lifecycle method componentDidUpdate\n    // to be called. There, we'll update the colors. (the props in this\n    // function body aren't up to date at that point)\n    circles.on(\"click\", event => {\n      let selected_datum_i = parseInt(event.target.id)\n      setSelectedDatum(selected_datum_i)\n      selectCluster(labels![selected_datum_i].label_kmedoids)\n    })\n\n    // zoom behavior\n    const zoomBehavior = this.getZoomBehavior(circles)\n    this.svg.call(zoomBehavior)\n\n    // start with scaled up init view if first time, else take previours scale state \n    this.svg.call(zoomBehavior.transform, this.scaleTransform || this.getInitScale(width, height))\n  }\n\n  /** \n   * returns function which applies a transformation after each zoom\n   * event (that is, dragging around + zooming).\n   * \n   * @param selection is the selection of nodes which should be transformed\n   * @returns a zoomBehavior function, to be called on the node on which this behavior\n   * should be bound to.\n   */\n  getZoomBehavior(selection: d3.Selection<any | null, Coordinate, any | null, any | null>): ZoomBehavior<any, any> {\n    return d3.zoom().on(\"zoom\", (event) => {\n      this.scaleTransform = event.transform\n      selection.attr(\"transform\", (d: Coordinate) => {\n        let coordinateAsArray = [d.x, d.y]\n        return `translate(${event.transform.apply(coordinateAsArray)})`\n      })\n    })\n  }\n\n  /** \n   * @param {int} width the width of the surrounding svg container\n   * @param {int} height the height of the surrounding svg container\n   * @returns a zoom behavior function with a scale factor that scales\n   * the data to width and height\n   * \n   * NOTE: assumes that the scale defined in {Data.js} is [0,100]\n   */\n  getInitScale(width: number, height: number) {\n    const scaleFactor = Math.min(width / 100, height / 100)\n    return d3.zoomIdentity.scale(scaleFactor)\n  }\n\n  componentDidMount() {\n    this.drawScatterPlot()\n  }\n\n  /**\n   * accesses the svg node associated with this class and updates\n   * all points so that the clicked point and the points belonging\n   * to its cluster have distinct colors\n   */\n  updateColorPoints() {\n    const { selected_datum, labels, getSelectedCoordinates, clustersToShow } = this.props\n    if (!this.svg  || !labels) return\n\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(getSelectedCoordinates(), clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n\n    this.svg.selectAll('circle')\n      .data(coordsToShow)\n      .attr('fill', d => {\n        if (d.index == selected_datum) return 'cyan'\n        if (this.props.selectedCluster == labels[d.index].label_kmedoids) return 'green'\n        return 'white'\n      })\n  }\n\n  highlightSearchResults() {\n    if (!this.svg) return\n    const { selected_datum, labels, labelChoice, getSelectedCoordinates, searchResultIndices, clustersToShow } = this.props\n    const coordsToShow = this.getIntersectionCoordinatesClustersToShow(getSelectedCoordinates(), clustersToShow)\n    if (coordsToShow.length === 0) return this.svg.selectAll('circle').remove()\n\n    this.svg.selectAll('circle')\n      .data(coordsToShow)\n      .attr('fill', d => {\n        if (searchResultIndices[d.index]) return 'green'\n        return 'white'\n      })\n  }\n\n  hasSelectedDatumChanged(prevProps: PropsForProjection) {\n    return prevProps.selected_datum !== this.props.selected_datum\n  }\n\n  haveCoordinatesChanged(prevProps: PropsForProjection) {\n    return prevProps.coordinatesParameters.minDistParameter !== this.props.coordinatesParameters.minDistParameter\n      || prevProps.coordinatesParameters.numNeighborsParameter !== this.props.coordinatesParameters.numNeighborsParameter\n      || prevProps.coordinates_to_show !== this.props.coordinates_to_show\n  }\n\n  haveSearchResultsChanged(prevProps: PropsForProjection) {\n    return prevProps.searchResultIndices !== this.props.searchResultIndices\n  }\n\n  haveClustersToShowChanged(prevProps: PropsForProjection) {\n    return prevProps.clustersToShow !== this.props.clustersToShow\n  }\n\n  hasSelectedClusterChanged(prevProps: PropsForProjection) {\n    return prevProps.selectedCluster !== this.props.selectedCluster\n  }\n\n  componentDidUpdate(prevProps: PropsForProjection, prevState: {}) {\n    if (this.haveCoordinatesChanged(prevProps) || this.haveClustersToShowChanged(prevProps)) {\n      this.drawScatterPlot()\n      this.updateColorPoints()\n      return\n    }\n    if (this.hasSelectedClusterChanged(prevProps) || this.hasSelectedDatumChanged(prevProps))\n      return this.updateColorPoints()\n    if (this.haveSearchResultsChanged(prevProps)) return this.highlightSearchResults()\n  }\n\n  render() {\n    const { width, height } = this.props\n    return (\n      <svg ref={(ref) => this.ref = ref} width={width} height={height} overflow=\"hidden\"></svg>\n    )\n  }\n}\n\nexport default Projection\n","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/ProjectionParameters.tsx",["193","194"],"import React, { useState } from \"react\"\nimport { CircularProgress, makeStyles, Theme, Typography } from '@material-ui/core'\nimport SlidersParamter from \"./Sliders\"\nimport { PropsFromData } from \"../Data\"\nimport { truncate } from \"lodash\"\nimport { PropsForProjection } from \"./Projection\"\n\n\nconst useStyles = makeStyles<Theme, { width: number, isMouseOver: boolean }>(theme => ({\n    absoluteContainer: {\n        position: 'absolute',\n        left: theme.spacing(3),\n        bottom: theme.spacing(2),\n        padding: theme.spacing(2),\n        width: props => (props.width < 1300) ? '19vw' : '14vw',\n        opacity: props => props.isMouseOver ? 1.0 : 0.2, // transparent until on mouse over\n        transition: 'opacity 0.1s'\n    },\n    oneLineFlex: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nexport default function ProjectionParameters(props: PropsForProjection) {\n    const [isMouseOver, setIsMouseOver] = useState(false)\n    const [isReloadingCoordinates, setIsReloadingCoordinates] = useState(false)\n    const [coordinatesToLoad, setCoordinatesToLoad] = useState(props.coordinates_to_show)\n    const classes = useStyles({ width: props.width, isMouseOver: isMouseOver })\n\n    return (\n        <div className={classes.absoluteContainer}\n            onMouseEnter={() => setIsMouseOver(true)}\n            onMouseLeave={() => setIsMouseOver(false)}>\n            <SlidersParamter {...props} />\n            <div className={classes.oneLineFlex}>\n                <Typography style={{ flex: '5' }}>\n                    Data Points to show:\n                </Typography>\n                <input name=\"numDataPoints\" type=\"text\" pattern=\"[0-9]*\"\n                    style={{ flex: '2 min-content', width: '4em', display: 'inline' }}\n                    value={coordinatesToLoad}\n                    onChange={(e) => {\n                        let size = parseInt(e.target.value) || 0\n                        setCoordinatesToLoad(size)\n                        setIsReloadingCoordinates(true)\n                        props.reloadCoordinatesWithSize(e)\n                            .then(() => {\n                                setIsReloadingCoordinates(false)\n                            })\n                    }}\n                ></input>\n                <CircularProgress\n                    style={{ flex: '1', visibility: isReloadingCoordinates ? 'visible' : 'hidden', marginLeft: '8px' }}\n                    size='1em' color='secondary' />\n            </div>\n        </div>\n    )\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/ProjectionElements/Sliders.tsx",["195","196","197","198","199"],"import React, { Component, useState } from 'react'\nimport { NumNeighbors, PropsFromData, num_neighbors_arr, ParameterNumNeighbors, ParameterMinDist } from '../Data'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n    slider: {\n        color: theme.palette.text.primary\n    }\n}));\n\nconst marks_num_neighbors = [\n    {\n        value: 2,\n        label: '2',\n    },\n    {\n        value: 5,\n        label: '5',\n    },\n    {\n        value: 10,\n        label: '10',\n    },\n    {\n        value: 50,\n        label: '50',\n    },\n]\n\nconst marks_min_dist = [\n    {\n        value: 1,\n        label: '0.1',\n    },\n    {\n        value: 2,\n        label: '0.2',\n    },\n    {\n        value: 5,\n        label: '0.5',\n    },\n    {\n        value: 9,\n        label: '0.9',\n    },\n]\n\nexport default function SlidersParamter(props: PropsFromData) {\n    const classes = useStyles()\n\n    const numNeighbors = props.coordinatesParameters.numNeighborsParameter\n    const minDist = props.coordinatesParameters.minDistParameter\n\n    return (\n        <>\n            <div className={classes.root}>\n                {/* num neighbors*/}\n                <Typography gutterBottom> \n                    Number of neighbors\n                </Typography>\n                <Slider\n                    getAriaValueText={(val) => `${val}`}\n                    aria-labelledby=\"number of neighbors for underyling umap algorithm\"\n                    step={null}\n                    marks={marks_num_neighbors}\n                    min={2}\n                    max={50}\n                    valueLabelDisplay=\"off\"\n                    value={parseInt(numNeighbors)}\n                    onChange={(event, val) => {\n                        props.setSelectedCoordinates(`${val}` as ParameterNumNeighbors, minDist)\n                    }}\n                    className={classes.slider}\n                />\n                {/* min dist*/}\n                <Typography gutterBottom>\n                    Minimum distance between points\n                </Typography>\n                <Slider\n                    getAriaValueText={(val) => `${val}`}\n                    aria-labelledby=\"number of mininum distances for underyling umap algorithm\"\n                    step={null}\n                    marks={marks_min_dist}\n                    min={1}\n                    max={9}\n                    valueLabelDisplay=\"off\"\n                    value={parseInt(minDist.split('.')[1])} // e.g. '0.1' to 1\n                    onChange={(event, val: number | number[]) => {\n                        props.setSelectedCoordinates(numNeighbors, `0.${val}` as ParameterMinDist)\n                    }}\n                    className={classes.slider}\n                />\n            </div>\n        </>\n    );\n}","/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/Comment.tsx",["200","201"],"/Users/danstach/Desktop/Studium/7. Semester/BA/project/umap-explorer/src/SidebarElements/ClusterDetails/ClusterChangeCommentDialog.tsx",["202","203","204","205","206","207","208","209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":7,"column":17,"nodeType":"216","messageId":"217","endLine":7,"endColumn":18},{"ruleId":"210","replacedBy":"218"},{"ruleId":"212","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"212","replacedBy":"221"},{"ruleId":"214","severity":1,"message":"222","line":42,"column":11,"nodeType":"216","messageId":"217","endLine":42,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":2,"column":21,"nodeType":"216","messageId":"217","endLine":2,"endColumn":26},{"ruleId":"223","severity":1,"message":"225","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"226","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":20},{"ruleId":"223","severity":1,"message":"227","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":13},{"ruleId":"223","severity":1,"message":"228","line":9,"column":15,"nodeType":"216","messageId":"217","endLine":9,"endColumn":19},{"ruleId":"223","severity":1,"message":"229","line":9,"column":21,"nodeType":"216","messageId":"217","endLine":9,"endColumn":32},{"ruleId":"223","severity":1,"message":"230","line":9,"column":34,"nodeType":"216","messageId":"217","endLine":9,"endColumn":44},{"ruleId":"223","severity":1,"message":"231","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":34},{"ruleId":"223","severity":1,"message":"232","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":25,"column":55,"nodeType":"235","messageId":"236","endLine":25,"endColumn":57},{"ruleId":"237","severity":1,"message":"238","line":55,"column":29,"nodeType":"239","messageId":"240","endLine":55,"endColumn":35},{"ruleId":"233","severity":1,"message":"241","line":75,"column":48,"nodeType":"235","messageId":"236","endLine":75,"endColumn":50},{"ruleId":"233","severity":1,"message":"241","line":76,"column":48,"nodeType":"235","messageId":"236","endLine":76,"endColumn":50},{"ruleId":"233","severity":1,"message":"241","line":77,"column":52,"nodeType":"235","messageId":"236","endLine":77,"endColumn":54},{"ruleId":"233","severity":1,"message":"241","line":78,"column":52,"nodeType":"235","messageId":"236","endLine":78,"endColumn":54},{"ruleId":"223","severity":1,"message":"242","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"244","line":151,"column":23,"nodeType":"245","messageId":"246","endLine":151,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":151,"column":66,"nodeType":"235","messageId":"236","endLine":151,"endColumn":68},{"ruleId":"243","severity":1,"message":"244","line":152,"column":7,"nodeType":"245","messageId":"246","endLine":152,"endColumn":9},{"ruleId":"243","severity":1,"message":"247","line":152,"column":7,"nodeType":"245","messageId":"246","endLine":152,"endColumn":9},{"ruleId":"243","severity":1,"message":"247","line":152,"column":27,"nodeType":"245","messageId":"246","endLine":152,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":152,"column":62,"nodeType":"235","messageId":"236","endLine":152,"endColumn":64},{"ruleId":"233","severity":1,"message":"234","line":184,"column":34,"nodeType":"235","messageId":"236","endLine":184,"endColumn":36},{"ruleId":"233","severity":1,"message":"241","line":414,"column":63,"nodeType":"235","messageId":"236","endLine":414,"endColumn":65},{"ruleId":"237","severity":1,"message":"238","line":414,"column":73,"nodeType":"239","messageId":"240","endLine":414,"endColumn":79},{"ruleId":"223","severity":1,"message":"248","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":8,"column":25,"nodeType":"216","messageId":"217","endLine":8,"endColumn":30},{"ruleId":"223","severity":1,"message":"249","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":15},{"ruleId":"223","severity":1,"message":"250","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":26},{"ruleId":"223","severity":1,"message":"251","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":23},{"ruleId":"223","severity":1,"message":"252","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":11},{"ruleId":"223","severity":1,"message":"253","line":118,"column":9,"nodeType":"216","messageId":"217","endLine":118,"endColumn":27},{"ruleId":"223","severity":1,"message":"254","line":160,"column":9,"nodeType":"216","messageId":"217","endLine":160,"endColumn":13},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"223","severity":1,"message":"255","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"256","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":15},{"ruleId":"223","severity":1,"message":"225","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"257","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"223","severity":1,"message":"258","line":6,"column":27,"nodeType":"216","messageId":"217","endLine":6,"endColumn":50},{"ruleId":"223","severity":1,"message":"259","line":8,"column":25,"nodeType":"216","messageId":"217","endLine":8,"endColumn":34},{"ruleId":"223","severity":1,"message":"251","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":23},{"ruleId":"223","severity":1,"message":"260","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"223","severity":1,"message":"261","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":34},{"ruleId":"223","severity":1,"message":"262","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"263","line":16,"column":19,"nodeType":"216","messageId":"217","endLine":16,"endColumn":30},{"ruleId":"223","severity":1,"message":"224","line":16,"column":32,"nodeType":"216","messageId":"217","endLine":16,"endColumn":37},{"ruleId":"223","severity":1,"message":"264","line":16,"column":39,"nodeType":"216","messageId":"217","endLine":16,"endColumn":52},{"ruleId":"223","severity":1,"message":"265","line":27,"column":6,"nodeType":"216","messageId":"217","endLine":27,"endColumn":21},{"ruleId":"223","severity":1,"message":"266","line":34,"column":5,"nodeType":"216","messageId":"217","endLine":34,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":277,"column":8,"nodeType":"269","endLine":277,"endColumn":10,"suggestions":"270"},{"ruleId":"223","severity":1,"message":"271","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":22},{"ruleId":"233","severity":1,"message":"241","line":32,"column":36,"nodeType":"235","messageId":"236","endLine":32,"endColumn":38},{"ruleId":"223","severity":1,"message":"272","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"223","severity":1,"message":"259","line":2,"column":32,"nodeType":"216","messageId":"217","endLine":2,"endColumn":41},{"ruleId":"223","severity":1,"message":"273","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"226","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":20},{"ruleId":"223","severity":1,"message":"274","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"259","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"223","severity":1,"message":"273","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":17},{"ruleId":"210","replacedBy":"275"},{"ruleId":"212","replacedBy":"276"},{"ruleId":"223","severity":1,"message":"277","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"241","line":65,"column":68,"nodeType":"235","messageId":"236","endLine":65,"endColumn":70},{"ruleId":"233","severity":1,"message":"241","line":74,"column":68,"nodeType":"235","messageId":"236","endLine":74,"endColumn":70},{"ruleId":"233","severity":1,"message":"234","line":136,"column":21,"nodeType":"235","messageId":"236","endLine":136,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":137,"column":40,"nodeType":"235","messageId":"236","endLine":137,"endColumn":42},{"ruleId":"223","severity":1,"message":"278","line":144,"column":13,"nodeType":"216","messageId":"217","endLine":144,"endColumn":27},{"ruleId":"223","severity":1,"message":"279","line":144,"column":29,"nodeType":"216","messageId":"217","endLine":144,"endColumn":35},{"ruleId":"223","severity":1,"message":"280","line":144,"column":37,"nodeType":"216","messageId":"217","endLine":144,"endColumn":48},{"ruleId":"223","severity":1,"message":"264","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":23},{"ruleId":"223","severity":1,"message":"281","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":18},{"ruleId":"223","severity":1,"message":"255","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"242","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"282","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"223","severity":1,"message":"283","line":2,"column":39,"nodeType":"216","messageId":"217","endLine":2,"endColumn":56},{"ruleId":"223","severity":1,"message":"284","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":15},{"ruleId":"223","severity":1,"message":"259","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":19},{"ruleId":"223","severity":1,"message":"285","line":72,"column":12,"nodeType":"216","messageId":"217","endLine":72,"endColumn":24},{"ruleId":"223","severity":1,"message":"286","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":14},{"ruleId":"223","severity":1,"message":"287","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":18},{"ruleId":"223","severity":1,"message":"288","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"223","severity":1,"message":"289","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":16,"column":16,"nodeType":"216","messageId":"217","endLine":16,"endColumn":21},{"ruleId":"223","severity":1,"message":"290","line":20,"column":7,"nodeType":"216","messageId":"217","endLine":20,"endColumn":13},{"ruleId":"223","severity":1,"message":"291","line":46,"column":11,"nodeType":"216","messageId":"217","endLine":46,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":61,"column":68,"nodeType":"239","messageId":"240","endLine":61,"endColumn":74},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'p' is assigned a value but never used.","Identifier","unusedVar",["292"],["293"],["292"],["293"],"'onClick' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'Label' is defined but never used.","'Separator' is defined but never used.","'NeoMorphCard' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'makeStyles' is defined but never used.","'ClusterChangeCommentDialog' is defined but never used.","'index' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'About' is defined but never used.","'least' is defined but never used.","'CircularProgress' is defined but never used.","'SlidersParamter' is defined but never used.","'p' is defined but never used.","'sidebar_image_size' is defined but never used.","'grem' is assigned a value but never used.","'Component' is defined but never used.","'Comment' is defined but never used.","'Select' is defined but never used.","'PropsForClusterOverview' is defined but never used.","'DataPoint' is defined but never used.","'ClusterSnippet' is defined but never used.","'MouseEventHandler' is defined but never used.","'lighten' is defined but never used.","'DataChanged' is defined but never used.","'PropsFromData' is defined but never used.","'ClusterInfoDict' is defined but never used.","'labelsAndData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rowsSorted' and 'setClustersToShow'. Either include them or remove the dependency array. If 'setClustersToShow' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["294"],"'createStyles' is defined but never used.","'Cluster' is defined but never used.","'TextField' is defined but never used.","'PropsForSidebar' is defined but never used.",["292"],["293"],"'useEffect' is defined but never used.","'selected_datum' is assigned a value but never used.","'labels' is assigned a value but never used.","'labelChoice' is assigned a value but never used.","'truncate' is defined but never used.","'NumNeighbors' is defined but never used.","'num_neighbors_arr' is defined but never used.","'Toolbar' is defined but never used.","'isBtnVisible' is assigned a value but never used.","'Button' is defined but never used.","'PersonIcon' is defined but never used.","'Typography' is defined but never used.","'Data' is defined but never used.","'emails' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},"Update the dependencies array to be: [rowsSorted, setClustersToShow]",{"range":"297","text":"298"},[9081,9083],"[rowsSorted, setClustersToShow]"]